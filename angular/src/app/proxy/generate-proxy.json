{
  "generated": [
    "app"
  ],
  "modules": {
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "controllerGroupName": "AbpTenant",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService",
              "name": "IAbpTenantAppService",
              "methods": [
                {
                  "name": "FindTenantByNameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "name",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                },
                {
                  "name": "FindTenantByIdAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "controllerGroupName": "AbpApiDefinition",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "controllerGroupName": "AbpApplicationConfiguration",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService",
              "name": "IAbpApplicationConfigurationAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "options",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByOptions": {
              "uniqueName": "GetAsyncByOptions",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "options",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "options",
                  "name": "IncludeLocalizationResources",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "options"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController": {
          "controllerName": "AbpApplicationLocalization",
          "controllerGroupName": "AbpApplicationLocalization",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService",
              "name": "IAbpApplicationLocalizationAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                      "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                      "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                    "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByInput": {
              "uniqueName": "GetAsyncByInput",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-localization",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto, Volo.Abp.AspNetCore.Mvc.Contracts",
                  "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                  "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "CultureName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "OnlyDynamics",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationLocalizationAppService"
            }
          }
        }
      }
    },
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "controllerGroupName": "Account",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService",
              "name": "IAccountAppService",
              "methods": [
                {
                  "name": "RegisterAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.RegisterDto",
                      "typeSimple": "Volo.Abp.Account.RegisterDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "SendPasswordResetCodeAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                      "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "VerifyPasswordResetTokenAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                      "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "ResetPasswordAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.ResetPasswordDto",
                      "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "VerifyPasswordResetTokenAsyncByInput": {
              "uniqueName": "VerifyPasswordResetTokenAsyncByInput",
              "name": "VerifyPasswordResetTokenAsync",
              "httpMethod": "POST",
              "url": "api/account/verify-password-reset-token",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.VerifyPasswordResetTokenInput, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "typeSimple": "Volo.Abp.Account.VerifyPasswordResetTokenInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IAccountAppService"
            }
          }
        },
        "Volo.Abp.Account.DynamicClaimsController": {
          "controllerName": "DynamicClaims",
          "controllerGroupName": "DynamicClaims",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.DynamicClaimsController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IDynamicClaimsAppService",
              "name": "IDynamicClaimsAppService",
              "methods": [
                {
                  "name": "RefreshAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "RefreshAsync": {
              "uniqueName": "RefreshAsync",
              "name": "RefreshAsync",
              "httpMethod": "POST",
              "url": "api/account/dynamic-claims/refresh",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IDynamicClaimsAppService"
            }
          }
        },
        "Volo.Abp.Account.ProfileController": {
          "controllerName": "Profile",
          "controllerGroupName": "Profile",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IProfileAppService",
              "name": "IProfileAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.UpdateProfileDto",
                      "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Account.ProfileDto",
                    "typeSimple": "Volo.Abp.Account.ProfileDto"
                  }
                },
                {
                  "name": "ChangePasswordAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                      "type": "Volo.Abp.Account.ChangePasswordInput",
                      "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/account/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/account/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.UpdateProfileDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Account.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.ProfileDto",
                "typeSimple": "Volo.Abp.Account.ProfileDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ChangePasswordInput, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Account.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.IProfileAppService"
            }
          }
        },
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "controllerGroupName": "Login",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/check-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "jsonName": null,
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController"
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "AgencyRatings.AgencyRatingAppService": {
          "controllerName": "AgencyRating",
          "controllerGroupName": "AgencyRating",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "AgencyRatings.AgencyRatingAppService",
          "interfaces": [
            {
              "type": "AgencyRatings.IAgencyRatingAppService",
              "name": "IAgencyRatingAppService",
              "methods": [
                {
                  "name": "GetAgencyRatings",
                  "parametersOnMethod": [
                    {
                      "name": "isCredit",
                      "typeAsString": "System.Boolean, System.Private.CoreLib",
                      "type": "System.Boolean",
                      "typeSimple": "boolean",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "AgencyRatings.AgencyRatingDto",
                    "typeSimple": "AgencyRatings.AgencyRatingDto"
                  }
                },
                {
                  "name": "CreateOrUpdateAgency",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "AgencyRatings.AgencyDto, GB.Opera.Application.Contracts",
                      "type": "AgencyRatings.AgencyDto",
                      "typeSimple": "AgencyRatings.AgencyDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "AgencyRatings.AgencyDto",
                    "typeSimple": "AgencyRatings.AgencyDto"
                  }
                },
                {
                  "name": "CreateOrUpdateRating",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "AgencyRatings.RatingDto, GB.Opera.Application.Contracts",
                      "type": "AgencyRatings.RatingDto",
                      "typeSimple": "AgencyRatings.RatingDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "AgencyRatings.RatingDto",
                    "typeSimple": "AgencyRatings.RatingDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAgencyRatingsByIsCredit": {
              "uniqueName": "GetAgencyRatingsByIsCredit",
              "name": "GetAgencyRatings",
              "httpMethod": "GET",
              "url": "api/app/agency-rating/agency-ratings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "isCredit",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "isCredit",
                  "name": "isCredit",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AgencyRatings.AgencyRatingDto",
                "typeSimple": "AgencyRatings.AgencyRatingDto"
              },
              "allowAnonymous": null,
              "implementFrom": "AgencyRatings.IAgencyRatingAppService"
            },
            "CreateOrUpdateAgencyByInput": {
              "uniqueName": "CreateOrUpdateAgencyByInput",
              "name": "CreateOrUpdateAgency",
              "httpMethod": "POST",
              "url": "api/app/agency-rating/or-update-agency",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AgencyRatings.AgencyDto, GB.Opera.Application.Contracts",
                  "type": "AgencyRatings.AgencyDto",
                  "typeSimple": "AgencyRatings.AgencyDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AgencyRatings.AgencyDto",
                  "typeSimple": "AgencyRatings.AgencyDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AgencyRatings.AgencyDto",
                "typeSimple": "AgencyRatings.AgencyDto"
              },
              "allowAnonymous": null,
              "implementFrom": "AgencyRatings.IAgencyRatingAppService"
            },
            "CreateOrUpdateRatingByInput": {
              "uniqueName": "CreateOrUpdateRatingByInput",
              "name": "CreateOrUpdateRating",
              "httpMethod": "POST",
              "url": "api/app/agency-rating/or-update-rating",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AgencyRatings.RatingDto, GB.Opera.Application.Contracts",
                  "type": "AgencyRatings.RatingDto",
                  "typeSimple": "AgencyRatings.RatingDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AgencyRatings.RatingDto",
                  "typeSimple": "AgencyRatings.RatingDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AgencyRatings.RatingDto",
                "typeSimple": "AgencyRatings.RatingDto"
              },
              "allowAnonymous": null,
              "implementFrom": "AgencyRatings.IAgencyRatingAppService"
            }
          }
        },
        "Commons.CommonAppService": {
          "controllerName": "Common",
          "controllerGroupName": "Common",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Commons.CommonAppService",
          "interfaces": [
            {
              "type": "Commons.ICommonAppService",
              "name": "ICommonAppService",
              "methods": [
                {
                  "name": "GetCompStockMarkets",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.CompStockMarketDto>",
                    "typeSimple": "[Commons.CompStockMarketDto]"
                  }
                },
                {
                  "name": "GetCompMSectors",
                  "parametersOnMethod": [
                    {
                      "name": "marketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Commons.CompDropdownDto",
                    "typeSimple": "Commons.CompDropdownDto"
                  }
                },
                {
                  "name": "SearchCompanies",
                  "parametersOnMethod": [
                    {
                      "name": "param",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Companies.CompanyDto>",
                    "typeSimple": "[Companies.CompanyDto]"
                  }
                },
                {
                  "name": "GetMarketLangAnnouncements",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.MarketLangAnnouncementDto>",
                    "typeSimple": "[Commons.MarketLangAnnouncementDto]"
                  }
                },
                {
                  "name": "GetCompMarketSectors",
                  "parametersOnMethod": [
                    {
                      "name": "marketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.SectorDto>",
                    "typeSimple": "[Commons.SectorDto]"
                  }
                },
                {
                  "name": "GetCompaniesTickers",
                  "parametersOnMethod": [
                    {
                      "name": "sectorID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "marketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.CompaniesTickerDto>",
                    "typeSimple": "[Commons.CompaniesTickerDto]"
                  }
                },
                {
                  "name": "GetStockMarkets",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.StockMarketDto>",
                    "typeSimple": "[Commons.StockMarketDto]"
                  }
                },
                {
                  "name": "GetStockMarketSectors",
                  "parametersOnMethod": [
                    {
                      "name": "stockMarketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.SectorDto>",
                    "typeSimple": "[Commons.SectorDto]"
                  }
                },
                {
                  "name": "GetSectorCompanies",
                  "parametersOnMethod": [
                    {
                      "name": "sectorID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "stockMarketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.CompaniesTickerDto>",
                    "typeSimple": "[Commons.CompaniesTickerDto]"
                  }
                },
                {
                  "name": "GetLangAnnouceTypes",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Commons.LangAnnounceTypeDto",
                    "typeSimple": "Commons.LangAnnounceTypeDto"
                  }
                },
                {
                  "name": "GetCompaniesWithHasFund",
                  "parametersOnMethod": [
                    {
                      "name": "stockMarketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Commons.CompanyWithHasFundDto",
                    "typeSimple": "Commons.CompanyWithHasFundDto"
                  }
                },
                {
                  "name": "GetAllFactsOwnershipMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.FactsOwnershipMappingDto>",
                    "typeSimple": "[Commons.FactsOwnershipMappingDto]"
                  }
                },
                {
                  "name": "GetCompaniesForQNP",
                  "parametersOnMethod": [
                    {
                      "name": "sectorID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "marketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Commons.CompanyQNPDto",
                    "typeSimple": "Commons.CompanyQNPDto"
                  }
                },
                {
                  "name": "GetAllPSRMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.ProductServiceRawDto>",
                    "typeSimple": "[Commons.ProductServiceRawDto]"
                  }
                },
                {
                  "name": "GetAllESDFactsMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.ESDFactDto>",
                    "typeSimple": "[Commons.ESDFactDto]"
                  }
                },
                {
                  "name": "GetCountriesForIndicators",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Commons.CountryDto>",
                    "typeSimple": "[Commons.CountryDto]"
                  }
                },
                {
                  "name": "GetAgencyRatings",
                  "parametersOnMethod": [
                    {
                      "name": "isCredit",
                      "typeAsString": "System.Boolean, System.Private.CoreLib",
                      "type": "System.Boolean",
                      "typeSimple": "boolean",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "AgencyRatings.AgencyRatingDto",
                    "typeSimple": "AgencyRatings.AgencyRatingDto"
                  }
                },
                {
                  "name": "GetNewsCatAndCountries",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Commons.GetNewsCatAndCountriesDto",
                    "typeSimple": "Commons.GetNewsCatAndCountriesDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompStockMarkets": {
              "uniqueName": "GetCompStockMarkets",
              "name": "GetCompStockMarkets",
              "httpMethod": "GET",
              "url": "api/app/common/comp-stock-markets",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.CompStockMarketDto>",
                "typeSimple": "[Commons.CompStockMarketDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "SearchCompaniesByParam": {
              "uniqueName": "SearchCompaniesByParam",
              "name": "SearchCompanies",
              "httpMethod": "POST",
              "url": "api/app/common/search-companies",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "param",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "param",
                  "name": "param",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Companies.CompanyDto>",
                "typeSimple": "[Companies.CompanyDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCompMSectorsByMarketID": {
              "uniqueName": "GetCompMSectorsByMarketID",
              "name": "GetCompMSectors",
              "httpMethod": "GET",
              "url": "api/app/common/comp-mSectors",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "marketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "marketID",
                  "name": "marketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Commons.CompDropdownDto",
                "typeSimple": "Commons.CompDropdownDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetMarketLangAnnouncements": {
              "uniqueName": "GetMarketLangAnnouncements",
              "name": "GetMarketLangAnnouncements",
              "httpMethod": "GET",
              "url": "api/app/common/market-lang-announcements",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.MarketLangAnnouncementDto>",
                "typeSimple": "[Commons.MarketLangAnnouncementDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCompMarketSectorsByMarketID": {
              "uniqueName": "GetCompMarketSectorsByMarketID",
              "name": "GetCompMarketSectors",
              "httpMethod": "GET",
              "url": "api/app/common/comp-market-sectors",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "marketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "marketID",
                  "name": "marketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.SectorDto>",
                "typeSimple": "[Commons.SectorDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCompaniesTickersBySectorIDAndMarketID": {
              "uniqueName": "GetCompaniesTickersBySectorIDAndMarketID",
              "name": "GetCompaniesTickers",
              "httpMethod": "GET",
              "url": "api/app/common/companies-tickers",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sectorID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "marketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sectorID",
                  "name": "sectorID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "marketID",
                  "name": "marketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.CompaniesTickerDto>",
                "typeSimple": "[Commons.CompaniesTickerDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetStockMarkets": {
              "uniqueName": "GetStockMarkets",
              "name": "GetStockMarkets",
              "httpMethod": "GET",
              "url": "api/app/common/stock-markets",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.StockMarketDto>",
                "typeSimple": "[Commons.StockMarketDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetStockMarketSectorsByStockMarketID": {
              "uniqueName": "GetStockMarketSectorsByStockMarketID",
              "name": "GetStockMarketSectors",
              "httpMethod": "GET",
              "url": "api/app/common/stock-market-sectors",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "stockMarketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "stockMarketID",
                  "name": "stockMarketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.SectorDto>",
                "typeSimple": "[Commons.SectorDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetSectorCompaniesBySectorIDAndStockMarketID": {
              "uniqueName": "GetSectorCompaniesBySectorIDAndStockMarketID",
              "name": "GetSectorCompanies",
              "httpMethod": "GET",
              "url": "api/app/common/sector-companies",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sectorID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "stockMarketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sectorID",
                  "name": "sectorID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "stockMarketID",
                  "name": "stockMarketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.CompaniesTickerDto>",
                "typeSimple": "[Commons.CompaniesTickerDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetLangAnnouceTypes": {
              "uniqueName": "GetLangAnnouceTypes",
              "name": "GetLangAnnouceTypes",
              "httpMethod": "GET",
              "url": "api/app/common/lang-annouce-types",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Commons.LangAnnounceTypeDto",
                "typeSimple": "Commons.LangAnnounceTypeDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCompaniesWithHasFundByStockMarketID": {
              "uniqueName": "GetCompaniesWithHasFundByStockMarketID",
              "name": "GetCompaniesWithHasFund",
              "httpMethod": "GET",
              "url": "api/app/common/companies-with-has-fund",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "stockMarketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "stockMarketID",
                  "name": "stockMarketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Commons.CompanyWithHasFundDto",
                "typeSimple": "Commons.CompanyWithHasFundDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetAllFactsOwnershipMappings": {
              "uniqueName": "GetAllFactsOwnershipMappings",
              "name": "GetAllFactsOwnershipMappings",
              "httpMethod": "GET",
              "url": "api/app/common/facts-ownership-mappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.FactsOwnershipMappingDto>",
                "typeSimple": "[Commons.FactsOwnershipMappingDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCompaniesForQNPBySectorIDAndMarketID": {
              "uniqueName": "GetCompaniesForQNPBySectorIDAndMarketID",
              "name": "GetCompaniesForQNP",
              "httpMethod": "GET",
              "url": "api/app/common/companies-for-qNP",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sectorID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "marketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sectorID",
                  "name": "sectorID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "marketID",
                  "name": "marketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Commons.CompanyQNPDto",
                "typeSimple": "Commons.CompanyQNPDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetAllPSRMappings": {
              "uniqueName": "GetAllPSRMappings",
              "name": "GetAllPSRMappings",
              "httpMethod": "GET",
              "url": "api/app/common/p-sRMappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.ProductServiceRawDto>",
                "typeSimple": "[Commons.ProductServiceRawDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetAllESDFactsMappings": {
              "uniqueName": "GetAllESDFactsMappings",
              "name": "GetAllESDFactsMappings",
              "httpMethod": "GET",
              "url": "api/app/common/e-sDFacts-mappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.ESDFactDto>",
                "typeSimple": "[Commons.ESDFactDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetCountriesForIndicators": {
              "uniqueName": "GetCountriesForIndicators",
              "name": "GetCountriesForIndicators",
              "httpMethod": "GET",
              "url": "api/app/common/countries-for-indicators",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Commons.CountryDto>",
                "typeSimple": "[Commons.CountryDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetAgencyRatingsByIsCredit": {
              "uniqueName": "GetAgencyRatingsByIsCredit",
              "name": "GetAgencyRatings",
              "httpMethod": "GET",
              "url": "api/app/common/agency-ratings",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "isCredit",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "isCredit",
                  "name": "isCredit",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AgencyRatings.AgencyRatingDto",
                "typeSimple": "AgencyRatings.AgencyRatingDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            },
            "GetNewsCatAndCountries": {
              "uniqueName": "GetNewsCatAndCountries",
              "name": "GetNewsCatAndCountries",
              "httpMethod": "GET",
              "url": "api/app/common/news-cat-and-countries",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Commons.GetNewsCatAndCountriesDto",
                "typeSimple": "Commons.GetNewsCatAndCountriesDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Commons.ICommonAppService"
            }
          }
        },
        "Companies.CompanyAppService": {
          "controllerName": "Company",
          "controllerGroupName": "Company",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Companies.CompanyAppService",
          "interfaces": [
            {
              "type": "Companies.ICompanyAppService",
              "name": "ICompanyAppService",
              "methods": [
                {
                  "name": "GetCompanies",
                  "parametersOnMethod": [
                    {
                      "name": "sectorID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "stockMarketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Companies.CompanyDto>",
                    "typeSimple": "[Companies.CompanyDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCompany",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "Companies.CompanyDto, GB.Opera.Application.Contracts",
                      "type": "Companies.CompanyDto",
                      "typeSimple": "Companies.CompanyDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Companies.CompanyDto",
                    "typeSimple": "Companies.CompanyDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompaniesBySectorIDAndStockMarketID": {
              "uniqueName": "GetCompaniesBySectorIDAndStockMarketID",
              "name": "GetCompanies",
              "httpMethod": "GET",
              "url": "api/app/company/companies",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "sectorID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "stockMarketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "sectorID",
                  "name": "sectorID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "stockMarketID",
                  "name": "stockMarketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Companies.CompanyDto>",
                "typeSimple": "[Companies.CompanyDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Companies.ICompanyAppService"
            },
            "CreateOrUpdateCompanyByModel": {
              "uniqueName": "CreateOrUpdateCompanyByModel",
              "name": "CreateOrUpdateCompany",
              "httpMethod": "POST",
              "url": "api/app/company/or-update-company",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Companies.CompanyDto, GB.Opera.Application.Contracts",
                  "type": "Companies.CompanyDto",
                  "typeSimple": "Companies.CompanyDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "Companies.CompanyDto",
                  "typeSimple": "Companies.CompanyDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Companies.CompanyDto",
                "typeSimple": "Companies.CompanyDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Companies.ICompanyAppService"
            }
          }
        },
        "CompanyAccounts.CompanyAccountAppService": {
          "controllerName": "CompanyAccount",
          "controllerGroupName": "CompanyAccount",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyAccounts.CompanyAccountAppService",
          "interfaces": [
            {
              "type": "CompanyAccounts.ICompanyAccountAppService",
              "name": "ICompanyAccountAppService",
              "methods": [
                {
                  "name": "GetCompaniesFacts",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                    "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyFacts",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[CompanyAccounts.CompanyGBFactMappingDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                      "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                    "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompaniesFactsByCompanyID": {
              "uniqueName": "GetCompaniesFactsByCompanyID",
              "name": "GetCompaniesFacts",
              "httpMethod": "GET",
              "url": "api/app/company-account/companies-facts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyAccounts.ICompanyAccountAppService"
            },
            "CreateOrUpdateCompanyFactsByList": {
              "uniqueName": "CreateOrUpdateCompanyFactsByList",
              "name": "CreateOrUpdateCompanyFacts",
              "httpMethod": "POST",
              "url": "api/app/company-account/or-update-company-facts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[CompanyAccounts.CompanyGBFactMappingDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                  "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                  "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CompanyAccounts.CompanyGBFactMappingDto>",
                "typeSimple": "[CompanyAccounts.CompanyGBFactMappingDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyAccounts.ICompanyAccountAppService"
            }
          }
        },
        "CompanyFactOrders.CompanyFactOrderAppService": {
          "controllerName": "CompanyFactOrder",
          "controllerGroupName": "CompanyFactOrder",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyFactOrders.CompanyFactOrderAppService",
          "interfaces": [
            {
              "type": "CompanyFactOrders.ICompanyFactOrderAppService",
              "name": "ICompanyFactOrderAppService",
              "methods": [
                {
                  "name": "GetCompaniesFactOrders",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                    "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyFactOrder",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[CompanyFactOrders.CompanyFactOrderDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                      "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                    "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompaniesFactOrdersByCompanyID": {
              "uniqueName": "GetCompaniesFactOrdersByCompanyID",
              "name": "GetCompaniesFactOrders",
              "httpMethod": "GET",
              "url": "api/app/company-fact-order/companies-fact-orders",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyFactOrders.ICompanyFactOrderAppService"
            },
            "CreateOrUpdateCompanyFactOrderByList": {
              "uniqueName": "CreateOrUpdateCompanyFactOrderByList",
              "name": "CreateOrUpdateCompanyFactOrder",
              "httpMethod": "POST",
              "url": "api/app/company-fact-order/or-update-company-fact-order",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[CompanyFactOrders.CompanyFactOrderDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                  "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                  "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CompanyFactOrders.CompanyFactOrderDto>",
                "typeSimple": "[CompanyFactOrders.CompanyFactOrderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyFactOrders.ICompanyFactOrderAppService"
            }
          }
        },
        "CompanyManagements.CompanyManagmentAppService": {
          "controllerName": "CompanyManagment",
          "controllerGroupName": "CompanyManagment",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyManagements.CompanyManagmentAppService",
          "interfaces": [
            {
              "type": "CompanyManagements.ICompanyManagementAppService",
              "name": "ICompanyManagementAppService",
              "methods": [
                {
                  "name": "GetCompaniesManagement",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.CompanyManagementDto",
                    "typeSimple": "CompanyManagements.CompanyManagementDto"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyManagement",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.ManagementDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.ManagementDto",
                      "typeSimple": "CompanyManagements.ManagementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.ManagementDto",
                    "typeSimple": "CompanyManagements.ManagementDto"
                  }
                },
                {
                  "name": "CreateOrUpdateSeniorManagement",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.SeniorManagementDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.SeniorManagementDto",
                      "typeSimple": "CompanyManagements.SeniorManagementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.SeniorManagementDto",
                    "typeSimple": "CompanyManagements.SeniorManagementDto"
                  }
                },
                {
                  "name": "CreateOrUpdateAuditors",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.AuditorDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.AuditorDto",
                      "typeSimple": "CompanyManagements.AuditorDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.AuditorDto",
                    "typeSimple": "CompanyManagements.AuditorDto"
                  }
                },
                {
                  "name": "CreateOrUpdateBMembers",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.BoardMemberDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.BoardMemberDto",
                      "typeSimple": "CompanyManagements.BoardMemberDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.BoardMemberDto",
                    "typeSimple": "CompanyManagements.BoardMemberDto"
                  }
                },
                {
                  "name": "CreateOrUpdateBranches",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.BranchDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.BranchDto",
                      "typeSimple": "CompanyManagements.BranchDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.BranchDto",
                    "typeSimple": "CompanyManagements.BranchDto"
                  }
                },
                {
                  "name": "CreateOrUpdateOverview",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.CompanyFinancialOverviewDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.CompanyFinancialOverviewDto",
                      "typeSimple": "CompanyManagements.CompanyFinancialOverviewDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.CompanyFinancialOverviewDto",
                    "typeSimple": "CompanyManagements.CompanyFinancialOverviewDto"
                  }
                },
                {
                  "name": "CreateOrUpdateContacts",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.ContactInformationDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.ContactInformationDto",
                      "typeSimple": "CompanyManagements.ContactInformationDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.ContactInformationDto",
                    "typeSimple": "CompanyManagements.ContactInformationDto"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyProjects",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyManagements.CompanyProjectDto, GB.Opera.Application.Contracts",
                      "type": "CompanyManagements.CompanyProjectDto",
                      "typeSimple": "CompanyManagements.CompanyProjectDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyManagements.CompanyProjectDto",
                    "typeSimple": "CompanyManagements.CompanyProjectDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompaniesManagementByCompanyID": {
              "uniqueName": "GetCompaniesManagementByCompanyID",
              "name": "GetCompaniesManagement",
              "httpMethod": "GET",
              "url": "api/app/company-managment/companies-management",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.CompanyManagementDto",
                "typeSimple": "CompanyManagements.CompanyManagementDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateCompanyManagementByModel": {
              "uniqueName": "CreateOrUpdateCompanyManagementByModel",
              "name": "CreateOrUpdateCompanyManagement",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-company-management",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.ManagementDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.ManagementDto",
                  "typeSimple": "CompanyManagements.ManagementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.ManagementDto",
                  "typeSimple": "CompanyManagements.ManagementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.ManagementDto",
                "typeSimple": "CompanyManagements.ManagementDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateSeniorManagementByModel": {
              "uniqueName": "CreateOrUpdateSeniorManagementByModel",
              "name": "CreateOrUpdateSeniorManagement",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-senior-management",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.SeniorManagementDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.SeniorManagementDto",
                  "typeSimple": "CompanyManagements.SeniorManagementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.SeniorManagementDto",
                  "typeSimple": "CompanyManagements.SeniorManagementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.SeniorManagementDto",
                "typeSimple": "CompanyManagements.SeniorManagementDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateAuditorsByModel": {
              "uniqueName": "CreateOrUpdateAuditorsByModel",
              "name": "CreateOrUpdateAuditors",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-auditors",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.AuditorDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.AuditorDto",
                  "typeSimple": "CompanyManagements.AuditorDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.AuditorDto",
                  "typeSimple": "CompanyManagements.AuditorDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.AuditorDto",
                "typeSimple": "CompanyManagements.AuditorDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateBMembersByModel": {
              "uniqueName": "CreateOrUpdateBMembersByModel",
              "name": "CreateOrUpdateBMembers",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-bMembers",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.BoardMemberDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.BoardMemberDto",
                  "typeSimple": "CompanyManagements.BoardMemberDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.BoardMemberDto",
                  "typeSimple": "CompanyManagements.BoardMemberDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.BoardMemberDto",
                "typeSimple": "CompanyManagements.BoardMemberDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateBranchesByModel": {
              "uniqueName": "CreateOrUpdateBranchesByModel",
              "name": "CreateOrUpdateBranches",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-branches",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.BranchDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.BranchDto",
                  "typeSimple": "CompanyManagements.BranchDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.BranchDto",
                  "typeSimple": "CompanyManagements.BranchDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.BranchDto",
                "typeSimple": "CompanyManagements.BranchDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateOverviewByModel": {
              "uniqueName": "CreateOrUpdateOverviewByModel",
              "name": "CreateOrUpdateOverview",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-overview",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.CompanyFinancialOverviewDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.CompanyFinancialOverviewDto",
                  "typeSimple": "CompanyManagements.CompanyFinancialOverviewDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.CompanyFinancialOverviewDto",
                  "typeSimple": "CompanyManagements.CompanyFinancialOverviewDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.CompanyFinancialOverviewDto",
                "typeSimple": "CompanyManagements.CompanyFinancialOverviewDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateContactsByModel": {
              "uniqueName": "CreateOrUpdateContactsByModel",
              "name": "CreateOrUpdateContacts",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-contacts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.ContactInformationDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.ContactInformationDto",
                  "typeSimple": "CompanyManagements.ContactInformationDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.ContactInformationDto",
                  "typeSimple": "CompanyManagements.ContactInformationDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.ContactInformationDto",
                "typeSimple": "CompanyManagements.ContactInformationDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            },
            "CreateOrUpdateCompanyProjectsByModel": {
              "uniqueName": "CreateOrUpdateCompanyProjectsByModel",
              "name": "CreateOrUpdateCompanyProjects",
              "httpMethod": "POST",
              "url": "api/app/company-managment/or-update-company-projects",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyManagements.CompanyProjectDto, GB.Opera.Application.Contracts",
                  "type": "CompanyManagements.CompanyProjectDto",
                  "typeSimple": "CompanyManagements.CompanyProjectDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyManagements.CompanyProjectDto",
                  "typeSimple": "CompanyManagements.CompanyProjectDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyManagements.CompanyProjectDto",
                "typeSimple": "CompanyManagements.CompanyProjectDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyManagements.ICompanyManagementAppService"
            }
          }
        },
        "CompanyMutualFunds.CompanyMutualFundAppService": {
          "controllerName": "CompanyMutualFund",
          "controllerGroupName": "CompanyMutualFund",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyMutualFunds.CompanyMutualFundAppService",
          "interfaces": [
            {
              "type": "CompanyMutualFunds.ICompanyMutualFundAppService",
              "name": "ICompanyMutualFundAppService",
              "methods": [
                {
                  "name": "GetCompanyMutualFunds",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyMutualFunds.GetCompanyMutualFundsDto",
                    "typeSimple": "CompanyMutualFunds.GetCompanyMutualFundsDto"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyMutualFund",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyMutualFunds.CompanyMutualFundDto, GB.Opera.Application.Contracts",
                      "type": "CompanyMutualFunds.CompanyMutualFundDto",
                      "typeSimple": "CompanyMutualFunds.CompanyMutualFundDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyMutualFunds.CompanyMutualFundDto",
                    "typeSimple": "CompanyMutualFunds.CompanyMutualFundDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompanyMutualFundsByCompanyID": {
              "uniqueName": "GetCompanyMutualFundsByCompanyID",
              "name": "GetCompanyMutualFunds",
              "httpMethod": "GET",
              "url": "api/app/company-mutual-fund/company-mutual-funds",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyMutualFunds.GetCompanyMutualFundsDto",
                "typeSimple": "CompanyMutualFunds.GetCompanyMutualFundsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyMutualFunds.ICompanyMutualFundAppService"
            },
            "CreateOrUpdateCompanyMutualFundByModel": {
              "uniqueName": "CreateOrUpdateCompanyMutualFundByModel",
              "name": "CreateOrUpdateCompanyMutualFund",
              "httpMethod": "POST",
              "url": "api/app/company-mutual-fund/or-update-company-mutual-fund",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyMutualFunds.CompanyMutualFundDto, GB.Opera.Application.Contracts",
                  "type": "CompanyMutualFunds.CompanyMutualFundDto",
                  "typeSimple": "CompanyMutualFunds.CompanyMutualFundDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyMutualFunds.CompanyMutualFundDto",
                  "typeSimple": "CompanyMutualFunds.CompanyMutualFundDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyMutualFunds.CompanyMutualFundDto",
                "typeSimple": "CompanyMutualFunds.CompanyMutualFundDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyMutualFunds.ICompanyMutualFundAppService"
            }
          }
        },
        "CompanyMutualFundSettings.CompanyMutualFundSettingAppService": {
          "controllerName": "CompanyMutualFundSetting",
          "controllerGroupName": "CompanyMutualFundSetting",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyMutualFundSettings.CompanyMutualFundSettingAppService",
          "interfaces": [
            {
              "type": "CompanyMutualFundSettings.ICompanyMutualFundSettingAppService",
              "name": "ICompanyMutualFundSettingAppService",
              "methods": [
                {
                  "name": "GetCompanyMutualFundSettings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "CompanyMutualFundSettings.CompanyMutualFundSettingDropdownDto",
                    "typeSimple": "CompanyMutualFundSettings.CompanyMutualFundSettingDropdownDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompanyMutualFundSettings": {
              "uniqueName": "GetCompanyMutualFundSettings",
              "name": "GetCompanyMutualFundSettings",
              "httpMethod": "GET",
              "url": "api/app/company-mutual-fund-setting/company-mutual-fund-settings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "CompanyMutualFundSettings.CompanyMutualFundSettingDropdownDto",
                "typeSimple": "CompanyMutualFundSettings.CompanyMutualFundSettingDropdownDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyMutualFundSettings.ICompanyMutualFundSettingAppService"
            }
          }
        },
        "CompanyOwnershipFacts.CompanyOwnershipFactAppService": {
          "controllerName": "CompanyOwnershipFact",
          "controllerGroupName": "CompanyOwnershipFact",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyOwnershipFacts.CompanyOwnershipFactAppService",
          "interfaces": [
            {
              "type": "CompanyOwnershipFacts.ICompanyOwnershipFactAppService",
              "name": "ICompanyOwnershipFactAppService",
              "methods": [
                {
                  "name": "GetCompanyOwnershipPreview",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CompanyOwnershipFacts.CompanyOwnershipFactDto>",
                    "typeSimple": "[CompanyOwnershipFacts.CompanyOwnershipFactDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyOwnerships",
                  "parametersOnMethod": [
                    {
                      "name": "dto",
                      "typeAsString": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                      "typeSimple": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                    "typeSimple": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompanyOwnershipPreviewByCompanyID": {
              "uniqueName": "GetCompanyOwnershipPreviewByCompanyID",
              "name": "GetCompanyOwnershipPreview",
              "httpMethod": "GET",
              "url": "api/app/company-ownership-fact/company-ownership-preview",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CompanyOwnershipFacts.CompanyOwnershipFactDto>",
                "typeSimple": "[CompanyOwnershipFacts.CompanyOwnershipFactDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnershipFacts.ICompanyOwnershipFactAppService"
            },
            "CreateOrUpdateCompanyOwnershipsByDto": {
              "uniqueName": "CreateOrUpdateCompanyOwnershipsByDto",
              "name": "CreateOrUpdateCompanyOwnerships",
              "httpMethod": "POST",
              "url": "api/app/company-ownership-fact/or-update-company-ownerships",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                  "typeSimple": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "jsonName": null,
                  "type": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                  "typeSimple": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto",
                "typeSimple": "CompanyOwnershipFacts.CompanyOwnershipFactEditDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnershipFacts.ICompanyOwnershipFactAppService"
            }
          }
        },
        "CompanyOwnerships.CompanyOwnershipAppService": {
          "controllerName": "CompanyOwnership",
          "controllerGroupName": "CompanyOwnership",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyOwnerships.CompanyOwnershipAppService",
          "interfaces": [
            {
              "type": "CompanyOwnerships.ICompanyOwnershipAppService",
              "name": "ICompanyOwnershipAppService",
              "methods": [
                {
                  "name": "GetRelatedInformations",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.CompanyOwnershipDto",
                    "typeSimple": "CompanyOwnerships.CompanyOwnershipDto"
                  }
                },
                {
                  "name": "CreateOrUpdateSubsidiary",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.SubsidiaryDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.SubsidiaryDto",
                      "typeSimple": "CompanyOwnerships.SubsidiaryDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.SubsidiaryDto",
                    "typeSimple": "CompanyOwnerships.SubsidiaryDto"
                  }
                },
                {
                  "name": "CreateOrUpdateSubsCompUpdate",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.SubsCompUpdDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.SubsCompUpdDto",
                      "typeSimple": "CompanyOwnerships.SubsCompUpdDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.SubsCompUpdDto",
                    "typeSimple": "CompanyOwnerships.SubsCompUpdDto"
                  }
                },
                {
                  "name": "CreateOrUpdateSisterCompany",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.SisterCompanyDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.SisterCompanyDto",
                      "typeSimple": "CompanyOwnerships.SisterCompanyDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.SisterCompanyDto",
                    "typeSimple": "CompanyOwnerships.SisterCompanyDto"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyProduct",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.CompanyProductDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.CompanyProductDto",
                      "typeSimple": "CompanyOwnerships.CompanyProductDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.CompanyProductDto",
                    "typeSimple": "CompanyOwnerships.CompanyProductDto"
                  }
                },
                {
                  "name": "CreateOrUpdateRawMaterial",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.CompanyRawMaterialDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.CompanyRawMaterialDto",
                      "typeSimple": "CompanyOwnerships.CompanyRawMaterialDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.CompanyRawMaterialDto",
                    "typeSimple": "CompanyOwnerships.CompanyRawMaterialDto"
                  }
                },
                {
                  "name": "CreateOrUpdateCompanyFIP",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.CompanyFIPDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.CompanyFIPDto",
                      "typeSimple": "CompanyOwnerships.CompanyFIPDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.CompanyFIPDto",
                    "typeSimple": "CompanyOwnerships.CompanyFIPDto"
                  }
                },
                {
                  "name": "CreateOrUpdateMiscNote",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyOwnerships.MiscNotesDto, GB.Opera.Application.Contracts",
                      "type": "CompanyOwnerships.MiscNotesDto",
                      "typeSimple": "CompanyOwnerships.MiscNotesDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyOwnerships.MiscNotesDto",
                    "typeSimple": "CompanyOwnerships.MiscNotesDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetRelatedInformationsByCompanyID": {
              "uniqueName": "GetRelatedInformationsByCompanyID",
              "name": "GetRelatedInformations",
              "httpMethod": "GET",
              "url": "api/app/company-ownership/related-informations",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.CompanyOwnershipDto",
                "typeSimple": "CompanyOwnerships.CompanyOwnershipDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateSubsidiaryByModel": {
              "uniqueName": "CreateOrUpdateSubsidiaryByModel",
              "name": "CreateOrUpdateSubsidiary",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-subsidiary",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.SubsidiaryDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.SubsidiaryDto",
                  "typeSimple": "CompanyOwnerships.SubsidiaryDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.SubsidiaryDto",
                  "typeSimple": "CompanyOwnerships.SubsidiaryDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.SubsidiaryDto",
                "typeSimple": "CompanyOwnerships.SubsidiaryDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateSubsCompUpdateByModel": {
              "uniqueName": "CreateOrUpdateSubsCompUpdateByModel",
              "name": "CreateOrUpdateSubsCompUpdate",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-subs-comp-update",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.SubsCompUpdDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.SubsCompUpdDto",
                  "typeSimple": "CompanyOwnerships.SubsCompUpdDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.SubsCompUpdDto",
                  "typeSimple": "CompanyOwnerships.SubsCompUpdDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.SubsCompUpdDto",
                "typeSimple": "CompanyOwnerships.SubsCompUpdDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateSisterCompanyByModel": {
              "uniqueName": "CreateOrUpdateSisterCompanyByModel",
              "name": "CreateOrUpdateSisterCompany",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-sister-company",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.SisterCompanyDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.SisterCompanyDto",
                  "typeSimple": "CompanyOwnerships.SisterCompanyDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.SisterCompanyDto",
                  "typeSimple": "CompanyOwnerships.SisterCompanyDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.SisterCompanyDto",
                "typeSimple": "CompanyOwnerships.SisterCompanyDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateCompanyProductByModel": {
              "uniqueName": "CreateOrUpdateCompanyProductByModel",
              "name": "CreateOrUpdateCompanyProduct",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-company-product",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.CompanyProductDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.CompanyProductDto",
                  "typeSimple": "CompanyOwnerships.CompanyProductDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.CompanyProductDto",
                  "typeSimple": "CompanyOwnerships.CompanyProductDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.CompanyProductDto",
                "typeSimple": "CompanyOwnerships.CompanyProductDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateRawMaterialByModel": {
              "uniqueName": "CreateOrUpdateRawMaterialByModel",
              "name": "CreateOrUpdateRawMaterial",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-raw-material",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.CompanyRawMaterialDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.CompanyRawMaterialDto",
                  "typeSimple": "CompanyOwnerships.CompanyRawMaterialDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.CompanyRawMaterialDto",
                  "typeSimple": "CompanyOwnerships.CompanyRawMaterialDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.CompanyRawMaterialDto",
                "typeSimple": "CompanyOwnerships.CompanyRawMaterialDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateCompanyFIPByModel": {
              "uniqueName": "CreateOrUpdateCompanyFIPByModel",
              "name": "CreateOrUpdateCompanyFIP",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-company-fIP",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.CompanyFIPDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.CompanyFIPDto",
                  "typeSimple": "CompanyOwnerships.CompanyFIPDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.CompanyFIPDto",
                  "typeSimple": "CompanyOwnerships.CompanyFIPDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.CompanyFIPDto",
                "typeSimple": "CompanyOwnerships.CompanyFIPDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            },
            "CreateOrUpdateMiscNoteByModel": {
              "uniqueName": "CreateOrUpdateMiscNoteByModel",
              "name": "CreateOrUpdateMiscNote",
              "httpMethod": "POST",
              "url": "api/app/company-ownership/or-update-misc-note",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyOwnerships.MiscNotesDto, GB.Opera.Application.Contracts",
                  "type": "CompanyOwnerships.MiscNotesDto",
                  "typeSimple": "CompanyOwnerships.MiscNotesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyOwnerships.MiscNotesDto",
                  "typeSimple": "CompanyOwnerships.MiscNotesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyOwnerships.MiscNotesDto",
                "typeSimple": "CompanyOwnerships.MiscNotesDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyOwnerships.ICompanyOwnershipAppService"
            }
          }
        },
        "CompanyPSRaws.CompanyPSRawAppService": {
          "controllerName": "CompanyPSRaw",
          "controllerGroupName": "CompanyPSRaw",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CompanyPSRaws.CompanyPSRawAppService",
          "interfaces": [
            {
              "type": "CompanyPSRaws.ICompanyPSRawAppService",
              "name": "ICompanyPSRawAppService",
              "methods": [
                {
                  "name": "GetCompanyPSRaws",
                  "parametersOnMethod": [
                    {
                      "name": "productServiceRawID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyPSRaws.CompanyPSRawOutputDto",
                    "typeSimple": "CompanyPSRaws.CompanyPSRawOutputDto"
                  }
                },
                {
                  "name": "CreateOrUpdatePSRCompanyService",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyPSRaws.PSRCompanyServiceDto, GB.Opera.Application.Contracts",
                      "type": "CompanyPSRaws.PSRCompanyServiceDto",
                      "typeSimple": "CompanyPSRaws.PSRCompanyServiceDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyPSRaws.PSRCompanyServiceDto",
                    "typeSimple": "CompanyPSRaws.PSRCompanyServiceDto"
                  }
                },
                {
                  "name": "CreateOrUpdatePSRCompanyProduct",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyPSRaws.PSRCompanyProductDto, GB.Opera.Application.Contracts",
                      "type": "CompanyPSRaws.PSRCompanyProductDto",
                      "typeSimple": "CompanyPSRaws.PSRCompanyProductDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyPSRaws.PSRCompanyProductDto",
                    "typeSimple": "CompanyPSRaws.PSRCompanyProductDto"
                  }
                },
                {
                  "name": "CreateOrUpdatePSRCompanyRawMaterial",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CompanyPSRaws.PSRCompanyRawMaterialDto, GB.Opera.Application.Contracts",
                      "type": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                      "typeSimple": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                    "typeSimple": "CompanyPSRaws.PSRCompanyRawMaterialDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCompanyPSRawsByProductServiceRawIDAndCompanyID": {
              "uniqueName": "GetCompanyPSRawsByProductServiceRawIDAndCompanyID",
              "name": "GetCompanyPSRaws",
              "httpMethod": "GET",
              "url": "api/app/company-pSRaw/company-pSRaws",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "productServiceRawID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "productServiceRawID",
                  "name": "productServiceRawID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyPSRaws.CompanyPSRawOutputDto",
                "typeSimple": "CompanyPSRaws.CompanyPSRawOutputDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyPSRaws.ICompanyPSRawAppService"
            },
            "CreateOrUpdatePSRCompanyServiceByModel": {
              "uniqueName": "CreateOrUpdatePSRCompanyServiceByModel",
              "name": "CreateOrUpdatePSRCompanyService",
              "httpMethod": "POST",
              "url": "api/app/company-pSRaw/or-update-pSRCompany-service",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyPSRaws.PSRCompanyServiceDto, GB.Opera.Application.Contracts",
                  "type": "CompanyPSRaws.PSRCompanyServiceDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyServiceDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyPSRaws.PSRCompanyServiceDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyServiceDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyPSRaws.PSRCompanyServiceDto",
                "typeSimple": "CompanyPSRaws.PSRCompanyServiceDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyPSRaws.ICompanyPSRawAppService"
            },
            "CreateOrUpdatePSRCompanyProductByModel": {
              "uniqueName": "CreateOrUpdatePSRCompanyProductByModel",
              "name": "CreateOrUpdatePSRCompanyProduct",
              "httpMethod": "POST",
              "url": "api/app/company-pSRaw/or-update-pSRCompany-product",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyPSRaws.PSRCompanyProductDto, GB.Opera.Application.Contracts",
                  "type": "CompanyPSRaws.PSRCompanyProductDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyProductDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyPSRaws.PSRCompanyProductDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyProductDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyPSRaws.PSRCompanyProductDto",
                "typeSimple": "CompanyPSRaws.PSRCompanyProductDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyPSRaws.ICompanyPSRawAppService"
            },
            "CreateOrUpdatePSRCompanyRawMaterialByModel": {
              "uniqueName": "CreateOrUpdatePSRCompanyRawMaterialByModel",
              "name": "CreateOrUpdatePSRCompanyRawMaterial",
              "httpMethod": "POST",
              "url": "api/app/company-pSRaw/or-update-pSRCompany-raw-material",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CompanyPSRaws.PSRCompanyRawMaterialDto, GB.Opera.Application.Contracts",
                  "type": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                  "typeSimple": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CompanyPSRaws.PSRCompanyRawMaterialDto",
                "typeSimple": "CompanyPSRaws.PSRCompanyRawMaterialDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CompanyPSRaws.ICompanyPSRawAppService"
            }
          }
        },
        "CorporateAnnouncements.CorporateAnnouncementAppService": {
          "controllerName": "CorporateAnnouncement",
          "controllerGroupName": "CorporateAnnouncement",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CorporateAnnouncements.CorporateAnnouncementAppService",
          "interfaces": [
            {
              "type": "CorporateAnnouncements.ICorporateAnnouncementAppService",
              "name": "ICorporateAnnouncementAppService",
              "methods": [
                {
                  "name": "GetCorporateAnnouncements",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CorporateAnnouncements.CorporateAnnouncementDto>",
                    "typeSimple": "[CorporateAnnouncements.CorporateAnnouncementDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCorporateAnnouncement",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "CorporateAnnouncements.CorporateAnnouncementDto, GB.Opera.Application.Contracts",
                      "type": "CorporateAnnouncements.CorporateAnnouncementDto",
                      "typeSimple": "CorporateAnnouncements.CorporateAnnouncementDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "CorporateAnnouncements.CorporateAnnouncementDto",
                    "typeSimple": "CorporateAnnouncements.CorporateAnnouncementDto"
                  }
                },
                {
                  "name": "DeleteCorporateAnnouncement",
                  "parametersOnMethod": [
                    {
                      "name": "corporateAnnouncementID",
                      "typeAsString": "System.Int64, System.Private.CoreLib",
                      "type": "System.Int64",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCorporateAnnouncementsByCompanyID": {
              "uniqueName": "GetCorporateAnnouncementsByCompanyID",
              "name": "GetCorporateAnnouncements",
              "httpMethod": "GET",
              "url": "api/app/corporate-announcement/corporate-announcements",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CorporateAnnouncements.CorporateAnnouncementDto>",
                "typeSimple": "[CorporateAnnouncements.CorporateAnnouncementDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CorporateAnnouncements.ICorporateAnnouncementAppService"
            },
            "CreateOrUpdateCorporateAnnouncementByModel": {
              "uniqueName": "CreateOrUpdateCorporateAnnouncementByModel",
              "name": "CreateOrUpdateCorporateAnnouncement",
              "httpMethod": "POST",
              "url": "api/app/corporate-announcement/or-update-corporate-announcement",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "CorporateAnnouncements.CorporateAnnouncementDto, GB.Opera.Application.Contracts",
                  "type": "CorporateAnnouncements.CorporateAnnouncementDto",
                  "typeSimple": "CorporateAnnouncements.CorporateAnnouncementDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "CorporateAnnouncements.CorporateAnnouncementDto",
                  "typeSimple": "CorporateAnnouncements.CorporateAnnouncementDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "CorporateAnnouncements.CorporateAnnouncementDto",
                "typeSimple": "CorporateAnnouncements.CorporateAnnouncementDto"
              },
              "allowAnonymous": null,
              "implementFrom": "CorporateAnnouncements.ICorporateAnnouncementAppService"
            },
            "DeleteCorporateAnnouncementByCorporateAnnouncementID": {
              "uniqueName": "DeleteCorporateAnnouncementByCorporateAnnouncementID",
              "name": "DeleteCorporateAnnouncement",
              "httpMethod": "DELETE",
              "url": "api/app/corporate-announcement/corporate-announcement",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "corporateAnnouncementID",
                  "typeAsString": "System.Int64, System.Private.CoreLib",
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "corporateAnnouncementID",
                  "name": "corporateAnnouncementID",
                  "jsonName": null,
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "CorporateAnnouncements.ICorporateAnnouncementAppService"
            }
          }
        },
        "CountryAccounts.CountryAccountAppService": {
          "controllerName": "CountryAccount",
          "controllerGroupName": "CountryAccount",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CountryAccounts.CountryAccountAppService",
          "interfaces": [
            {
              "type": "CountryAccounts.ICountryAccountAppService",
              "name": "ICountryAccountAppService",
              "methods": [
                {
                  "name": "GetCountriesFacts",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                    "typeSimple": "[CountryAccounts.CountryAccountDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCountryFact",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[CountryAccounts.CountryAccountDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                      "typeSimple": "[CountryAccounts.CountryAccountDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                    "typeSimple": "[CountryAccounts.CountryAccountDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCountriesFactsByCountryID": {
              "uniqueName": "GetCountriesFactsByCountryID",
              "name": "GetCountriesFacts",
              "httpMethod": "GET",
              "url": "api/app/country-account/countries-facts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "CountryID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "CountryID",
                  "name": "CountryID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                "typeSimple": "[CountryAccounts.CountryAccountDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CountryAccounts.ICountryAccountAppService"
            },
            "CreateOrUpdateCountryFactByList": {
              "uniqueName": "CreateOrUpdateCountryFactByList",
              "name": "CreateOrUpdateCountryFact",
              "httpMethod": "POST",
              "url": "api/app/country-account/or-update-country-fact",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[CountryAccounts.CountryAccountDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                  "typeSimple": "[CountryAccounts.CountryAccountDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                  "typeSimple": "[CountryAccounts.CountryAccountDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CountryAccounts.CountryAccountDto>",
                "typeSimple": "[CountryAccounts.CountryAccountDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CountryAccounts.ICountryAccountAppService"
            }
          }
        },
        "CountryFactOrders.CountryFactOrderAppService": {
          "controllerName": "CountryFactOrder",
          "controllerGroupName": "CountryFactOrder",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "CountryFactOrders.CountryFactOrderAppService",
          "interfaces": [
            {
              "type": "CountryFactOrders.ICountryFactOrderAppService",
              "name": "ICountryFactOrderAppService",
              "methods": [
                {
                  "name": "GetCountryFactOrders",
                  "parametersOnMethod": [
                    {
                      "name": "CountryID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                    "typeSimple": "[CountryFactOrders.CountryFactOrderDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateCountryFactOrder",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[CountryFactOrders.CountryFactOrderDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                      "typeSimple": "[CountryFactOrders.CountryFactOrderDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                    "typeSimple": "[CountryFactOrders.CountryFactOrderDto]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetCountryFactOrdersByCountryID": {
              "uniqueName": "GetCountryFactOrdersByCountryID",
              "name": "GetCountryFactOrders",
              "httpMethod": "GET",
              "url": "api/app/country-fact-order/country-fact-orders",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "CountryID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "CountryID",
                  "name": "CountryID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                "typeSimple": "[CountryFactOrders.CountryFactOrderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CountryFactOrders.ICountryFactOrderAppService"
            },
            "CreateOrUpdateCountryFactOrderByList": {
              "uniqueName": "CreateOrUpdateCountryFactOrderByList",
              "name": "CreateOrUpdateCountryFactOrder",
              "httpMethod": "POST",
              "url": "api/app/country-fact-order/or-update-country-fact-order",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[CountryFactOrders.CountryFactOrderDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                  "typeSimple": "[CountryFactOrders.CountryFactOrderDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                  "typeSimple": "[CountryFactOrders.CountryFactOrderDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<CountryFactOrders.CountryFactOrderDto>",
                "typeSimple": "[CountryFactOrders.CountryFactOrderDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "CountryFactOrders.ICountryFactOrderAppService"
            }
          }
        },
        "EstimatesandForecasts.EstimatesandForecastAppService": {
          "controllerName": "EstimatesandForecast",
          "controllerGroupName": "EstimatesandForecast",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "EstimatesandForecasts.EstimatesandForecastAppService",
          "interfaces": [
            {
              "type": "EstimatesandForecasts.IEstimatesandForecastAppService",
              "name": "IEstimatesandForecastAppService",
              "methods": [
                {
                  "name": "GetEstimatesandForecasts",
                  "parametersOnMethod": [
                    {
                      "name": "companyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "EstimatesandForecasts.EstimatesandForecastOutputDto",
                    "typeSimple": "EstimatesandForecasts.EstimatesandForecastOutputDto"
                  }
                },
                {
                  "name": "CreateOrUpdateEstimatesandForecast",
                  "parametersOnMethod": [
                    {
                      "name": "model",
                      "typeAsString": "EstimatesandForecasts.EstimatesandForecastDto, GB.Opera.Application.Contracts",
                      "type": "EstimatesandForecasts.EstimatesandForecastDto",
                      "typeSimple": "EstimatesandForecasts.EstimatesandForecastDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "EstimatesandForecasts.EstimatesandForecastDto",
                    "typeSimple": "EstimatesandForecasts.EstimatesandForecastDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetEstimatesandForecastsByCompanyID": {
              "uniqueName": "GetEstimatesandForecastsByCompanyID",
              "name": "GetEstimatesandForecasts",
              "httpMethod": "GET",
              "url": "api/app/estimatesand-forecast/estimatesand-forecasts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "companyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "companyID",
                  "name": "companyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "EstimatesandForecasts.EstimatesandForecastOutputDto",
                "typeSimple": "EstimatesandForecasts.EstimatesandForecastOutputDto"
              },
              "allowAnonymous": null,
              "implementFrom": "EstimatesandForecasts.IEstimatesandForecastAppService"
            },
            "CreateOrUpdateEstimatesandForecastByModel": {
              "uniqueName": "CreateOrUpdateEstimatesandForecastByModel",
              "name": "CreateOrUpdateEstimatesandForecast",
              "httpMethod": "POST",
              "url": "api/app/estimatesand-forecast/or-update-estimatesand-forecast",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "EstimatesandForecasts.EstimatesandForecastDto, GB.Opera.Application.Contracts",
                  "type": "EstimatesandForecasts.EstimatesandForecastDto",
                  "typeSimple": "EstimatesandForecasts.EstimatesandForecastDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "model",
                  "jsonName": null,
                  "type": "EstimatesandForecasts.EstimatesandForecastDto",
                  "typeSimple": "EstimatesandForecasts.EstimatesandForecastDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "EstimatesandForecasts.EstimatesandForecastDto",
                "typeSimple": "EstimatesandForecasts.EstimatesandForecastDto"
              },
              "allowAnonymous": null,
              "implementFrom": "EstimatesandForecasts.IEstimatesandForecastAppService"
            }
          }
        },
        "GB.Opera.AccountsClassifications.AccountClassificationAppService": {
          "controllerName": "AccountClassification",
          "controllerGroupName": "AccountClassification",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.AccountsClassifications.AccountClassificationAppService",
          "interfaces": [
            {
              "type": "GB.Opera.AccountsClassifications.IAccountClassificationAppService",
              "name": "IAccountClassificationAppService",
              "methods": [
                {
                  "name": "GetAllACFactsMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.AccountsClassifications.ACFactsDtos>",
                    "typeSimple": "[GB.Opera.AccountsClassifications.ACFactsDtos]"
                  }
                },
                {
                  "name": "SaveUpdateAacFact",
                  "parametersOnMethod": [
                    {
                      "name": "gbAcFactsAccount",
                      "typeAsString": "GB.Opera.AccountsClassifications.GbAcFactsAccount, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                      "typeSimple": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                    "typeSimple": "GB.Opera.AccountsClassifications.GbAcFactsAccount"
                  }
                },
                {
                  "name": "GetAacfactByid",
                  "parametersOnMethod": [
                    {
                      "name": "ACFactId",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                    "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]"
                  }
                },
                {
                  "name": "DeleteAacfactById",
                  "parametersOnMethod": [
                    {
                      "name": "ACFactId",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Int32",
                    "typeSimple": "number"
                  }
                },
                {
                  "name": "SaveUpdateAacFacts",
                  "parametersOnMethod": [
                    {
                      "name": "gbAcFactsAccounts",
                      "typeAsString": "System.Collections.Generic.IEnumerable`1[[GB.Opera.AccountsClassifications.GbAcFactsAccount, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.IEnumerable<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                      "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.IEnumerable<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                    "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllACFactsMappings": {
              "uniqueName": "GetAllACFactsMappings",
              "name": "GetAllACFactsMappings",
              "httpMethod": "GET",
              "url": "api/app/account-classification/a-cFacts-mappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.AccountsClassifications.ACFactsDtos>",
                "typeSimple": "[GB.Opera.AccountsClassifications.ACFactsDtos]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.AccountsClassifications.IAccountClassificationAppService"
            },
            "SaveUpdateAacFactByGbAcFactsAccount": {
              "uniqueName": "SaveUpdateAacFactByGbAcFactsAccount",
              "name": "SaveUpdateAacFact",
              "httpMethod": "POST",
              "url": "api/app/account-classification/save-update-aac-fact",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "gbAcFactsAccount",
                  "typeAsString": "GB.Opera.AccountsClassifications.GbAcFactsAccount, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                  "typeSimple": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "gbAcFactsAccount",
                  "name": "gbAcFactsAccount",
                  "jsonName": null,
                  "type": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                  "typeSimple": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.AccountsClassifications.GbAcFactsAccount",
                "typeSimple": "GB.Opera.AccountsClassifications.GbAcFactsAccount"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.AccountsClassifications.IAccountClassificationAppService"
            },
            "GetAacfactByidByACFactId": {
              "uniqueName": "GetAacfactByidByACFactId",
              "name": "GetAacfactByid",
              "httpMethod": "GET",
              "url": "api/app/account-classification/aacfact-byid/{ACFactId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "ACFactId",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "ACFactId",
                  "name": "ACFactId",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.AccountsClassifications.IAccountClassificationAppService"
            },
            "DeleteAacfactByIdByACFactId": {
              "uniqueName": "DeleteAacfactByIdByACFactId",
              "name": "DeleteAacfactById",
              "httpMethod": "DELETE",
              "url": "api/app/account-classification/aacfact-by-id/{ACFactId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "ACFactId",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "ACFactId",
                  "name": "ACFactId",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Int32",
                "typeSimple": "number"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.AccountsClassifications.IAccountClassificationAppService"
            },
            "SaveUpdateAacFactsByGbAcFactsAccounts": {
              "uniqueName": "SaveUpdateAacFactsByGbAcFactsAccounts",
              "name": "SaveUpdateAacFacts",
              "httpMethod": "POST",
              "url": "api/app/account-classification/save-update-aac-facts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "gbAcFactsAccounts",
                  "typeAsString": "System.Collections.Generic.IEnumerable`1[[GB.Opera.AccountsClassifications.GbAcFactsAccount, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.IEnumerable<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                  "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "gbAcFactsAccounts",
                  "name": "gbAcFactsAccounts",
                  "jsonName": null,
                  "type": "System.Collections.Generic.IEnumerable<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                  "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.IEnumerable<GB.Opera.AccountsClassifications.GbAcFactsAccount>",
                "typeSimple": "[GB.Opera.AccountsClassifications.GbAcFactsAccount]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.AccountsClassifications.IAccountClassificationAppService"
            }
          }
        },
        "GB.Opera.Books.BookAppService": {
          "controllerName": "Book",
          "controllerGroupName": "Book",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.Books.BookAppService",
          "interfaces": [
            {
              "type": "GB.Opera.Books.IBookAppService",
              "name": "IBookAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.Books.BookDto",
                    "typeSimple": "GB.Opera.Books.BookDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                      "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<GB.Opera.Books.BookDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<GB.Opera.Books.BookDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "GB.Opera.Books.CreateUpdateBookDto, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.Books.CreateUpdateBookDto",
                      "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.Books.BookDto",
                    "typeSimple": "GB.Opera.Books.BookDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "GB.Opera.Books.CreateUpdateBookDto, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.Books.CreateUpdateBookDto",
                      "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.Books.BookDto",
                    "typeSimple": "GB.Opera.Books.BookDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "GB.Opera.Books.CreateUpdateBookDto, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.Books.CreateUpdateBookDto",
                  "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "GB.Opera.Books.CreateUpdateBookDto",
                  "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.Books.BookDto",
                "typeSimple": "GB.Opera.Books.BookDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<GB.Opera.Books.BookDto,GB.Opera.Books.CreateUpdateBookDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "GB.Opera.Books.CreateUpdateBookDto, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.Books.CreateUpdateBookDto",
                  "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "GB.Opera.Books.CreateUpdateBookDto",
                  "typeSimple": "GB.Opera.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.Books.BookDto",
                "typeSimple": "GB.Opera.Books.BookDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<GB.Opera.Books.BookDto,System.Guid,GB.Opera.Books.CreateUpdateBookDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.Books.BookDto",
                "typeSimple": "GB.Opera.Books.BookDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<GB.Opera.Books.BookDto,GB.Opera.Books.BookDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<GB.Opera.Books.BookDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<GB.Opera.Books.BookDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<GB.Opera.Books.BookDto,GB.Opera.Books.BookDto,System.Guid,Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto>"
            }
          }
        },
        "GB.Opera.EndOfDay.EndofDayAppService": {
          "controllerName": "EndofDay",
          "controllerGroupName": "EndofDay",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.EndOfDay.EndofDayAppService",
          "interfaces": [
            {
              "type": "GB.Opera.EndOfDay.IEndofDayAppService",
              "name": "IEndofDayAppService",
              "methods": [
                {
                  "name": "GetAllGCCSector",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.EndOfDay.GCCSector>",
                    "typeSimple": "[GB.Opera.EndOfDay.GCCSector]"
                  }
                },
                {
                  "name": "EODPrices",
                  "parametersOnMethod": [
                    {
                      "name": "PriceDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "StockMarketID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.EndOfDay.EODPrices>",
                    "typeSimple": "[GB.Opera.EndOfDay.EODPrices]"
                  }
                },
                {
                  "name": "ImportPrices",
                  "parametersOnMethod": [
                    {
                      "name": "filePath",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllGCCSector": {
              "uniqueName": "GetAllGCCSector",
              "name": "GetAllGCCSector",
              "httpMethod": "GET",
              "url": "api/app/endof-day/g-cCSector",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.EndOfDay.GCCSector>",
                "typeSimple": "[GB.Opera.EndOfDay.GCCSector]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.EndOfDay.IEndofDayAppService"
            },
            "EODPricesByPriceDateAndStockMarketID": {
              "uniqueName": "EODPricesByPriceDateAndStockMarketID",
              "name": "EODPrices",
              "httpMethod": "POST",
              "url": "api/app/endof-day/e-oDPrices",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "PriceDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "StockMarketID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "PriceDate",
                  "name": "PriceDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "StockMarketID",
                  "name": "StockMarketID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.EndOfDay.EODPrices>",
                "typeSimple": "[GB.Opera.EndOfDay.EODPrices]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.EndOfDay.IEndofDayAppService"
            },
            "ImportPricesByFilePath": {
              "uniqueName": "ImportPricesByFilePath",
              "name": "ImportPrices",
              "httpMethod": "POST",
              "url": "api/app/endof-day/import-prices",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "filePath",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "filePath",
                  "name": "filePath",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.EndOfDay.IEndofDayAppService"
            }
          }
        },
        "GB.Opera.Entry.EntryAppService": {
          "controllerName": "Entry",
          "controllerGroupName": "Entry",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.Entry.EntryAppService",
          "interfaces": [
            {
              "type": "Entry.IEntryAppService",
              "name": "IEntryAppService",
              "methods": [
                {
                  "name": "GetStatusFinancials",
                  "parametersOnMethod": [
                    {
                      "name": "userId",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Entry.StatusFinancialsDto>",
                    "typeSimple": "[Entry.StatusFinancialsDto]"
                  }
                },
                {
                  "name": "InsertUpdateFinancialValues",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[Entry.FinancialsDetailDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                      "typeSimple": "[Entry.FinancialsDetailDto]",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "InsertUpdateFinancialCommentsStatus",
                  "parametersOnMethod": [
                    {
                      "name": "list",
                      "typeAsString": "System.Collections.Generic.List`1[[Entry.FinancialsDetailDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                      "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                      "typeSimple": "[Entry.FinancialsDetailDto]",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "userID",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "InsertUpdateComitChanges",
                  "parametersOnMethod": [
                    {
                      "name": "dto",
                      "typeAsString": "Entry.AsofDatesFinancialDto, GB.Opera.Application.Contracts",
                      "type": "Entry.AsofDatesFinancialDto",
                      "typeSimple": "Entry.AsofDatesFinancialDto",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "userID",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetStatusFinancialsByUserId": {
              "uniqueName": "GetStatusFinancialsByUserId",
              "name": "GetStatusFinancials",
              "httpMethod": "GET",
              "url": "api/app/entry/status-financials/{userId}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userId",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userId",
                  "name": "userId",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<Entry.StatusFinancialsDto>",
                "typeSimple": "[Entry.StatusFinancialsDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "Entry.IEntryAppService"
            },
            "GetCompanyAccountsByInput": {
              "uniqueName": "GetCompanyAccountsByInput",
              "name": "GetCompanyAccounts",
              "httpMethod": "GET",
              "url": "api/app/entry/company-accounts",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Entry.CompanyAccountsInputDto, GB.Opera.Application.Contracts",
                  "type": "Entry.CompanyAccountsInputDto",
                  "typeSimple": "Entry.CompanyAccountsInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FinancialsID",
                  "jsonName": null,
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "NewReviewFinancialID",
                  "jsonName": null,
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsNew",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CompanyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Entry.CompanyAccountsDto",
                "typeSimple": "Entry.CompanyAccountsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Entry.EntryAppService"
            },
            "GetAsofDatesFinancialsByInput": {
              "uniqueName": "GetAsofDatesFinancialsByInput",
              "name": "GetAsofDatesFinancials",
              "httpMethod": "GET",
              "url": "api/app/entry/asof-dates-financials",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Entry.AsofDatesFinancialInputDto, GB.Opera.Application.Contracts",
                  "type": "Entry.AsofDatesFinancialInputDto",
                  "typeSimple": "Entry.AsofDatesFinancialInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FinancialsID",
                  "jsonName": null,
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "IsNew",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CompanyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Entry.AsofDatesFinancialDto",
                "typeSimple": "Entry.AsofDatesFinancialDto"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Entry.EntryAppService"
            },
            "InsertUpdateFinancialValuesByList": {
              "uniqueName": "InsertUpdateFinancialValuesByList",
              "name": "InsertUpdateFinancialValues",
              "httpMethod": "POST",
              "url": "api/app/entry/update-financial-values",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[Entry.FinancialsDetailDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                  "typeSimple": "[Entry.FinancialsDetailDto]",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                  "typeSimple": "[Entry.FinancialsDetailDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Entry.IEntryAppService"
            },
            "InsertUpdateFinancialCommentsStatusByListAndUserID": {
              "uniqueName": "InsertUpdateFinancialCommentsStatusByListAndUserID",
              "name": "InsertUpdateFinancialCommentsStatus",
              "httpMethod": "POST",
              "url": "api/app/entry/update-financial-comments-status",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "list",
                  "typeAsString": "System.Collections.Generic.List`1[[Entry.FinancialsDetailDto, GB.Opera.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib",
                  "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                  "typeSimple": "[Entry.FinancialsDetailDto]",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "userID",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "list",
                  "name": "list",
                  "jsonName": null,
                  "type": "System.Collections.Generic.List<Entry.FinancialsDetailDto>",
                  "typeSimple": "[Entry.FinancialsDetailDto]",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "userID",
                  "name": "userID",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Entry.IEntryAppService"
            },
            "InsertUpdateComitChangesByDtoAndUserID": {
              "uniqueName": "InsertUpdateComitChangesByDtoAndUserID",
              "name": "InsertUpdateComitChanges",
              "httpMethod": "POST",
              "url": "api/app/entry/update-comit-changes",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "dto",
                  "typeAsString": "Entry.AsofDatesFinancialDto, GB.Opera.Application.Contracts",
                  "type": "Entry.AsofDatesFinancialDto",
                  "typeSimple": "Entry.AsofDatesFinancialDto",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "userID",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "dto",
                  "name": "dto",
                  "jsonName": null,
                  "type": "Entry.AsofDatesFinancialDto",
                  "typeSimple": "Entry.AsofDatesFinancialDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "userID",
                  "name": "userID",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Entry.IEntryAppService"
            }
          }
        },
        "GB.Opera.GbOwnerShips.GbOwnerShipAppService": {
          "controllerName": "GbOwnerShip",
          "controllerGroupName": "GbOwnerShip",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.GbOwnerShips.GbOwnerShipAppService",
          "interfaces": [
            {
              "type": "GB.Opera.GbOwnerShips.IGbOwnerShipAppService",
              "name": "IGbOwnerShipAppService",
              "methods": [
                {
                  "name": "GetAllFactsOwnershipMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.GbOwnerShips.GbOwnerShip>",
                    "typeSimple": "[GB.Opera.GbOwnerShips.GbOwnerShip]"
                  }
                },
                {
                  "name": "SaveUpdateGbOwnerShip",
                  "parametersOnMethod": [
                    {
                      "name": "gbOwnerShip",
                      "typeAsString": "GB.Opera.GbOwnerShips.GbOwnerShip, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.GbOwnerShips.GbOwnerShip",
                      "typeSimple": "GB.Opera.GbOwnerShips.GbOwnerShip",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.GbOwnerShips.GbOwnerShip",
                    "typeSimple": "GB.Opera.GbOwnerShips.GbOwnerShip"
                  }
                },
                {
                  "name": "GetGBOwnershipbyId",
                  "parametersOnMethod": [
                    {
                      "name": "GBOwnershipID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.GbOwnerShips.GbOwnerShip>",
                    "typeSimple": "[GB.Opera.GbOwnerShips.GbOwnerShip]"
                  }
                },
                {
                  "name": "DeletGBOwnershipById",
                  "parametersOnMethod": [
                    {
                      "name": "GBOwnershipID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Int32",
                    "typeSimple": "number"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllFactsOwnershipMappings": {
              "uniqueName": "GetAllFactsOwnershipMappings",
              "name": "GetAllFactsOwnershipMappings",
              "httpMethod": "GET",
              "url": "api/app/gb-owner-ship/facts-ownership-mappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.GbOwnerShips.GbOwnerShip>",
                "typeSimple": "[GB.Opera.GbOwnerShips.GbOwnerShip]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.GbOwnerShips.IGbOwnerShipAppService"
            },
            "SaveUpdateGbOwnerShipByGbOwnerShip": {
              "uniqueName": "SaveUpdateGbOwnerShipByGbOwnerShip",
              "name": "SaveUpdateGbOwnerShip",
              "httpMethod": "POST",
              "url": "api/app/gb-owner-ship/save-update-gb-owner-ship",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "gbOwnerShip",
                  "typeAsString": "GB.Opera.GbOwnerShips.GbOwnerShip, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.GbOwnerShips.GbOwnerShip",
                  "typeSimple": "GB.Opera.GbOwnerShips.GbOwnerShip",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "gbOwnerShip",
                  "name": "gbOwnerShip",
                  "jsonName": null,
                  "type": "GB.Opera.GbOwnerShips.GbOwnerShip",
                  "typeSimple": "GB.Opera.GbOwnerShips.GbOwnerShip",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.GbOwnerShips.GbOwnerShip",
                "typeSimple": "GB.Opera.GbOwnerShips.GbOwnerShip"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.GbOwnerShips.IGbOwnerShipAppService"
            },
            "GetGBOwnershipbyIdByGBOwnershipID": {
              "uniqueName": "GetGBOwnershipbyIdByGBOwnershipID",
              "name": "GetGBOwnershipbyId",
              "httpMethod": "GET",
              "url": "api/app/gb-owner-ship/g-bOwnershipby-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "GBOwnershipID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "GBOwnershipID",
                  "name": "GBOwnershipID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.GbOwnerShips.GbOwnerShip>",
                "typeSimple": "[GB.Opera.GbOwnerShips.GbOwnerShip]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.GbOwnerShips.IGbOwnerShipAppService"
            },
            "DeletGBOwnershipByIdByGBOwnershipID": {
              "uniqueName": "DeletGBOwnershipByIdByGBOwnershipID",
              "name": "DeletGBOwnershipById",
              "httpMethod": "POST",
              "url": "api/app/gb-owner-ship/delet-gBOwnership-by-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "GBOwnershipID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "GBOwnershipID",
                  "name": "GBOwnershipID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Int32",
                "typeSimple": "number"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.GbOwnerShips.IGbOwnerShipAppService"
            }
          }
        },
        "GB.Opera.LHRUploads.LHRUploadsAppService": {
          "controllerName": "LHRUploads",
          "controllerGroupName": "LHRUploads",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.LHRUploads.LHRUploadsAppService",
          "interfaces": [
            {
              "type": "GB.Opera.LHRUploads.ILHRUploadsAppService",
              "name": "ILHRUploadsAppService",
              "methods": [
                {
                  "name": "GetAllStockMarkets",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.LHRUploads.LHRUpload>",
                    "typeSimple": "[GB.Opera.LHRUploads.LHRUpload]"
                  }
                },
                {
                  "name": "GetCompaniesFromMarket",
                  "parametersOnMethod": [
                    {
                      "name": "StockMarketID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.LHRUploads.Company>",
                    "typeSimple": "[GB.Opera.LHRUploads.Company]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllStockMarkets": {
              "uniqueName": "GetAllStockMarkets",
              "name": "GetAllStockMarkets",
              "httpMethod": "GET",
              "url": "api/app/l-hRUploads/stock-markets",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.LHRUploads.LHRUpload>",
                "typeSimple": "[GB.Opera.LHRUploads.LHRUpload]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.LHRUploads.ILHRUploadsAppService"
            },
            "GetCompaniesFromMarketByStockMarketID": {
              "uniqueName": "GetCompaniesFromMarketByStockMarketID",
              "name": "GetCompaniesFromMarket",
              "httpMethod": "GET",
              "url": "api/app/l-hRUploads/companies-from-market",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "StockMarketID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "StockMarketID",
                  "name": "StockMarketID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.LHRUploads.Company>",
                "typeSimple": "[GB.Opera.LHRUploads.Company]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.LHRUploads.ILHRUploadsAppService"
            }
          }
        },
        "GB.Opera.OfficialsIndics.OfficialIndicsAppService": {
          "controllerName": "OfficialIndics",
          "controllerGroupName": "OfficialIndics",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.OfficialsIndics.OfficialIndicsAppService",
          "interfaces": [
            {
              "type": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService",
              "name": "IOfficialIndicsAppService",
              "methods": [
                {
                  "name": "GetOfficialIndics",
                  "parametersOnMethod": [
                    {
                      "name": "PriceDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "StockMarketID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.OfficialIndics>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.OfficialIndics]"
                  }
                },
                {
                  "name": "Getgulfbaseprices",
                  "parametersOnMethod": [
                    {
                      "name": "PriceDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.GulfbasePrices>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.GulfbasePrices]"
                  }
                },
                {
                  "name": "GetGlobalIndices",
                  "parametersOnMethod": [
                    {
                      "name": "PriceDate",
                      "typeAsString": "System.DateTime, System.Private.CoreLib",
                      "type": "System.DateTime",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.GlobalIndices>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.GlobalIndices]"
                  }
                },
                {
                  "name": "GetMFundCompanies",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFundCompanies>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.MFundCompanies]"
                  }
                },
                {
                  "name": "GetAllFunds",
                  "parametersOnMethod": [
                    {
                      "name": "CompanyID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFunds>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.MFunds]"
                  }
                },
                {
                  "name": "GetAllFundPrices",
                  "parametersOnMethod": [
                    {
                      "name": "MFundID",
                      "typeAsString": "System.Int64, System.Private.CoreLib",
                      "type": "System.Int64",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFundPrices>",
                    "typeSimple": "[GB.Opera.OfficialsIndics.MFundPrices]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetOfficialIndicsByPriceDateAndStockMarketID": {
              "uniqueName": "GetOfficialIndicsByPriceDateAndStockMarketID",
              "name": "GetOfficialIndics",
              "httpMethod": "GET",
              "url": "api/app/official-indics/official-indics",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "PriceDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "StockMarketID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "PriceDate",
                  "name": "PriceDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "StockMarketID",
                  "name": "StockMarketID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.OfficialIndics>",
                "typeSimple": "[GB.Opera.OfficialsIndics.OfficialIndics]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            },
            "GetgulfbasepricesByPriceDate": {
              "uniqueName": "GetgulfbasepricesByPriceDate",
              "name": "Getgulfbaseprices",
              "httpMethod": "GET",
              "url": "api/app/official-indics/gulfbaseprices",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "PriceDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "PriceDate",
                  "name": "PriceDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.GulfbasePrices>",
                "typeSimple": "[GB.Opera.OfficialsIndics.GulfbasePrices]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            },
            "GetGlobalIndicesByPriceDate": {
              "uniqueName": "GetGlobalIndicesByPriceDate",
              "name": "GetGlobalIndices",
              "httpMethod": "GET",
              "url": "api/app/official-indics/global-indices",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "PriceDate",
                  "typeAsString": "System.DateTime, System.Private.CoreLib",
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "PriceDate",
                  "name": "PriceDate",
                  "jsonName": null,
                  "type": "System.DateTime",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.GlobalIndices>",
                "typeSimple": "[GB.Opera.OfficialsIndics.GlobalIndices]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            },
            "GetMFundCompanies": {
              "uniqueName": "GetMFundCompanies",
              "name": "GetMFundCompanies",
              "httpMethod": "GET",
              "url": "api/app/official-indics/m-fund-companies",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFundCompanies>",
                "typeSimple": "[GB.Opera.OfficialsIndics.MFundCompanies]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            },
            "GetAllFundsByCompanyID": {
              "uniqueName": "GetAllFundsByCompanyID",
              "name": "GetAllFunds",
              "httpMethod": "GET",
              "url": "api/app/official-indics/funds",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "CompanyID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "CompanyID",
                  "name": "CompanyID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFunds>",
                "typeSimple": "[GB.Opera.OfficialsIndics.MFunds]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            },
            "GetAllFundPricesByMFundID": {
              "uniqueName": "GetAllFundPricesByMFundID",
              "name": "GetAllFundPrices",
              "httpMethod": "GET",
              "url": "api/app/official-indics/fund-prices",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "MFundID",
                  "typeAsString": "System.Int64, System.Private.CoreLib",
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "MFundID",
                  "name": "MFundID",
                  "jsonName": null,
                  "type": "System.Int64",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.OfficialsIndics.MFundPrices>",
                "typeSimple": "[GB.Opera.OfficialsIndics.MFundPrices]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.OfficialsIndics.IOfficialIndicsAppService"
            }
          }
        },
        "GB.Opera.Uploads.UploadAppService": {
          "controllerName": "Upload",
          "controllerGroupName": "Upload",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GB.Opera.Uploads.UploadAppService",
          "interfaces": [
            {
              "type": "GB.Opera.Uploads.IUploadAppService",
              "name": "IUploadAppService",
              "methods": [
                {
                  "name": "UploadwithHasDtos",
                  "parametersOnMethod": [
                    {
                      "name": "MarketID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "SectorID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.Uploads.UploadwithHasDtos",
                    "typeSimple": "GB.Opera.Uploads.UploadwithHasDtos"
                  }
                },
                {
                  "name": "_getEntryReEntryUsers",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.Uploads.Users>",
                    "typeSimple": "[GB.Opera.Uploads.Users]"
                  }
                },
                {
                  "name": "GetFinancialsBycompanyId",
                  "parametersOnMethod": [
                    {
                      "name": "CompanyID",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.Uploads.UploadFinancialListDto>",
                    "typeSimple": "[GB.Opera.Uploads.UploadFinancialListDto]"
                  }
                },
                {
                  "name": "CreateUploadFinancial",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "GB.Opera.Uploads.UploadFinancials, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.Uploads.UploadFinancials",
                      "typeSimple": "GB.Opera.Uploads.UploadFinancials",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "UploadwithHasDtosByMarketIDAndSectorID": {
              "uniqueName": "UploadwithHasDtosByMarketIDAndSectorID",
              "name": "UploadwithHasDtos",
              "httpMethod": "POST",
              "url": "api/app/upload/uploadwith-has-dtos",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "MarketID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "SectorID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "MarketID",
                  "name": "MarketID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "SectorID",
                  "name": "SectorID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.Uploads.UploadwithHasDtos",
                "typeSimple": "GB.Opera.Uploads.UploadwithHasDtos"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Uploads.IUploadAppService"
            },
            "_getEntryReEntryUsers": {
              "uniqueName": "_getEntryReEntryUsers",
              "name": "_getEntryReEntryUsers",
              "httpMethod": "POST",
              "url": "api/app/upload/_get-entry-re-entry-users",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.Uploads.Users>",
                "typeSimple": "[GB.Opera.Uploads.Users]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Uploads.IUploadAppService"
            },
            "GetFinancialsBycompanyIdByCompanyID": {
              "uniqueName": "GetFinancialsBycompanyIdByCompanyID",
              "name": "GetFinancialsBycompanyId",
              "httpMethod": "GET",
              "url": "api/app/upload/financials-bycompany-id",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "CompanyID",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "CompanyID",
                  "name": "CompanyID",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.Uploads.UploadFinancialListDto>",
                "typeSimple": "[GB.Opera.Uploads.UploadFinancialListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Uploads.IUploadAppService"
            },
            "CreateUploadFinancialByInput": {
              "uniqueName": "CreateUploadFinancialByInput",
              "name": "CreateUploadFinancial",
              "httpMethod": "POST",
              "url": "api/app/upload/upload-financial",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "GB.Opera.Uploads.UploadFinancials, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.Uploads.UploadFinancials",
                  "typeSimple": "GB.Opera.Uploads.UploadFinancials",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "GB.Opera.Uploads.UploadFinancials",
                  "typeSimple": "GB.Opera.Uploads.UploadFinancials",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "GB.Opera.Uploads.IUploadAppService"
            }
          }
        },
        "GbFacts.GbFactAppService": {
          "controllerName": "GbFact",
          "controllerGroupName": "GbFact",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "GbFacts.GbFactAppService",
          "interfaces": [
            {
              "type": "GbFacts.IGbFactAppService",
              "name": "IGbFactAppService",
              "methods": [
                {
                  "name": "GetGbFactsDataFromProcedure",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GbFacts.GbFactListDto>",
                    "typeSimple": "[GbFacts.GbFactListDto]"
                  }
                },
                {
                  "name": "GetAllFactsMappings",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GbFacts.GbFactListDto>",
                    "typeSimple": "[GbFacts.GbFactListDto]"
                  }
                },
                {
                  "name": "SaveUpdate",
                  "parametersOnMethod": [
                    {
                      "name": "gbFact",
                      "typeAsString": "GB.Opera.GbFacts.GbFactsAccount, GB.Opera.Application.Contracts",
                      "type": "GB.Opera.GbFacts.GbFactsAccount",
                      "typeSimple": "GB.Opera.GbFacts.GbFactsAccount",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "GB.Opera.GbFacts.GbFactsAccount",
                    "typeSimple": "GB.Opera.GbFacts.GbFactsAccount"
                  }
                },
                {
                  "name": "GetgbfactByid",
                  "parametersOnMethod": [
                    {
                      "name": "GBFactID",
                      "typeAsString": "System.Int16, System.Private.CoreLib",
                      "type": "System.Int16",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<GB.Opera.GbFacts.GbFactsAccount>",
                    "typeSimple": "[GB.Opera.GbFacts.GbFactsAccount]"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetGbFactsDataFromProcedure": {
              "uniqueName": "GetGbFactsDataFromProcedure",
              "name": "GetGbFactsDataFromProcedure",
              "httpMethod": "GET",
              "url": "api/app/gb-fact/gb-facts-data-from-procedure",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GbFacts.GbFactListDto>",
                "typeSimple": "[GbFacts.GbFactListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "GbFacts.IGbFactAppService"
            },
            "GetAllFactsMappings": {
              "uniqueName": "GetAllFactsMappings",
              "name": "GetAllFactsMappings",
              "httpMethod": "GET",
              "url": "api/app/gb-fact/facts-mappings",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<GbFacts.GbFactListDto>",
                "typeSimple": "[GbFacts.GbFactListDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "GbFacts.IGbFactAppService"
            },
            "SaveUpdateByGbFact": {
              "uniqueName": "SaveUpdateByGbFact",
              "name": "SaveUpdate",
              "httpMethod": "POST",
              "url": "api/app/gb-fact/save-update",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "gbFact",
                  "typeAsString": "GB.Opera.GbFacts.GbFactsAccount, GB.Opera.Application.Contracts",
                  "type": "GB.Opera.GbFacts.GbFactsAccount",
                  "typeSimple": "GB.Opera.GbFacts.GbFactsAccount",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "gbFact",
                  "name": "gbFact",
                  "jsonName": null,
                  "type": "GB.Opera.GbFacts.GbFactsAccount",
                  "typeSimple": "GB.Opera.GbFacts.GbFactsAccount",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "GB.Opera.GbFacts.GbFactsAccount",
                "typeSimple": "GB.Opera.GbFacts.GbFactsAccount"
              },
              "allowAnonymous": null,
              "implementFrom": "GbFacts.IGbFactAppService"
            },
            "GetgbfactByidByGBFactID": {
              "uniqueName": "GetgbfactByidByGBFactID",
              "name": "GetgbfactByid",
              "httpMethod": "GET",
              "url": "api/app/gb-fact/gbfact-byid",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "GBFactID",
                  "typeAsString": "System.Int16, System.Private.CoreLib",
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "GBFactID",
                  "name": "GBFactID",
                  "jsonName": null,
                  "type": "System.Int16",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<GB.Opera.GbFacts.GbFactsAccount>",
                "typeSimple": "[GB.Opera.GbFacts.GbFactsAccount]"
              },
              "allowAnonymous": null,
              "implementFrom": "GbFacts.IGbFactAppService"
            }
          }
        },
        "News.NewsAppService": {
          "controllerName": "News",
          "controllerGroupName": "News",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "News.NewsAppService",
          "interfaces": [
            {
              "type": "News.INewsAppService",
              "name": "INewsAppService",
              "methods": [
                {
                  "name": "GetNews",
                  "parametersOnMethod": [
                    {
                      "name": "langId",
                      "typeAsString": "System.Boolean, System.Private.CoreLib",
                      "type": "System.Boolean",
                      "typeSimple": "boolean",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "newsId",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<News.NewsDto>",
                    "typeSimple": "[News.NewsDto]"
                  }
                },
                {
                  "name": "CreateOrUpdateNews",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "News.NewsDto, GB.Opera.Application.Contracts",
                      "type": "News.NewsDto",
                      "typeSimple": "News.NewsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "News.NewsDto",
                    "typeSimple": "News.NewsDto"
                  }
                },
                {
                  "name": "DeleteNews",
                  "parametersOnMethod": [
                    {
                      "name": "langId",
                      "typeAsString": "System.Boolean, System.Private.CoreLib",
                      "type": "System.Boolean",
                      "typeSimple": "boolean",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "newsId",
                      "typeAsString": "System.Int32, System.Private.CoreLib",
                      "type": "System.Int32",
                      "typeSimple": "number",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetNewsByLangIdAndNewsId": {
              "uniqueName": "GetNewsByLangIdAndNewsId",
              "name": "GetNews",
              "httpMethod": "GET",
              "url": "api/app/news/news",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "langId",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "newsId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "langId",
                  "name": "langId",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "newsId",
                  "name": "newsId",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Collections.Generic.List<News.NewsDto>",
                "typeSimple": "[News.NewsDto]"
              },
              "allowAnonymous": null,
              "implementFrom": "News.INewsAppService"
            },
            "CreateOrUpdateNewsByInput": {
              "uniqueName": "CreateOrUpdateNewsByInput",
              "name": "CreateOrUpdateNews",
              "httpMethod": "POST",
              "url": "api/app/news/or-update-news",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "News.NewsDto, GB.Opera.Application.Contracts",
                  "type": "News.NewsDto",
                  "typeSimple": "News.NewsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "News.NewsDto",
                  "typeSimple": "News.NewsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "News.NewsDto",
                "typeSimple": "News.NewsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "News.INewsAppService"
            },
            "DeleteNewsByLangIdAndNewsId": {
              "uniqueName": "DeleteNewsByLangIdAndNewsId",
              "name": "DeleteNews",
              "httpMethod": "DELETE",
              "url": "api/app/news/news",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "langId",
                  "typeAsString": "System.Boolean, System.Private.CoreLib",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "newsId",
                  "typeAsString": "System.Int32, System.Private.CoreLib",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "langId",
                  "name": "langId",
                  "jsonName": null,
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "newsId",
                  "name": "newsId",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "News.INewsAppService"
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "controllerGroupName": "Features",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService",
              "name": "IFeatureAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                    "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                      "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                      "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            },
            "DeleteAsyncByProviderNameAndProviderKey": {
              "uniqueName": "DeleteAsyncByProviderNameAndProviderKey",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "controllerGroupName": "Role",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService",
              "name": "IIdentityRoleAppService",
              "methods": [
                {
                  "name": "GetAllListAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityRoleDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityRoleAppService"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>"
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.GetIdentityRolesInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.IdentityRoleCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityRoleDto,System.Guid,Volo.Abp.Identity.IdentityRoleUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "controllerGroupName": "User",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService",
              "name": "IIdentityUserAppService",
              "methods": [
                {
                  "name": "GetRolesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "GetAssignableRolesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
                  }
                },
                {
                  "name": "UpdateRolesAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "FindByUsernameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "userName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "FindByEmailAsync",
                  "parametersOnMethod": [
                    {
                      "name": "email",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                      "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                      "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Identity.IdentityUserDto",
                    "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.GetIdentityUsersInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.IdentityUserCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.Identity.IdentityUserDto,System.Guid,Volo.Abp.Identity.IdentityUserUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "controllerGroupName": "UserLookup",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService",
              "name": "IIdentityUserLookupAppService",
              "methods": [
                {
                  "name": "FindByIdAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "FindByUserNameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "userName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Users.UserData",
                    "typeSimple": "Volo.Abp.Users.UserData"
                  }
                },
                {
                  "name": "SearchAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                      "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                    "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
                  }
                },
                {
                  "name": "GetCountAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                      "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                      "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Int64",
                    "typeSimple": "number"
                  }
                }
              ]
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "controllerGroupName": "Tenant",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService",
              "name": "ITenantAppService",
              "methods": [
                {
                  "name": "GetDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "UpdateDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "defaultConnectionString",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "DeleteDefaultConnectionStringAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "GetListAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                      "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                    "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
                  }
                },
                {
                  "name": "CreateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                      "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                      "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.TenantManagement.TenantDto",
                    "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
                  }
                },
                {
                  "name": "DeleteAsync",
                  "parametersOnMethod": [
                    {
                      "name": "id",
                      "typeAsString": "System.Guid, System.Private.CoreLib",
                      "type": "System.Guid",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>"
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IReadOnlyAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.GetTenantsInput>"
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.ICreateAppService<Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.TenantCreateDto>"
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IUpdateAppService<Volo.Abp.TenantManagement.TenantDto,System.Guid,Volo.Abp.TenantManagement.TenantUpdateDto>"
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.Application.Services.IDeleteAppService<System.Guid>"
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          }
        }
      }
    },
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "controllerGroupName": "Permissions",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService",
              "name": "IPermissionAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                    "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "providerName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "providerKey",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    },
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                      "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                      "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService"
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          }
        }
      }
    },
    "settingManagement": {
      "rootPath": "settingManagement",
      "remoteServiceName": "SettingManagement",
      "controllers": {
        "Volo.Abp.SettingManagement.EmailSettingsController": {
          "controllerName": "EmailSettings",
          "controllerGroupName": "EmailSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.SettingManagement.EmailSettingsController",
          "interfaces": [
            {
              "type": "Volo.Abp.SettingManagement.IEmailSettingsAppService",
              "name": "IEmailSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                    "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                      "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                      "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                },
                {
                  "name": "SendTestEmailAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                      "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                      "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.SettingManagement.EmailSettingsDto",
                "typeSimple": "Volo.Abp.SettingManagement.EmailSettingsDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/emailing",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto, Volo.Abp.SettingManagement.Application.Contracts",
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "typeSimple": "Volo.Abp.SettingManagement.UpdateEmailSettingsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            },
            "SendTestEmailAsyncByInput": {
              "uniqueName": "SendTestEmailAsyncByInput",
              "name": "SendTestEmailAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/emailing/send-test-email",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.SettingManagement.SendTestEmailInput, Volo.Abp.SettingManagement.Application.Contracts",
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "typeSimple": "Volo.Abp.SettingManagement.SendTestEmailInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.IEmailSettingsAppService"
            }
          }
        },
        "Volo.Abp.SettingManagement.TimeZoneSettingsController": {
          "controllerName": "TimeZoneSettings",
          "controllerGroupName": "TimeZoneSettings",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Volo.Abp.SettingManagement.TimeZoneSettingsController",
          "interfaces": [
            {
              "type": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService",
              "name": "ITimeZoneSettingsAppService",
              "methods": [
                {
                  "name": "GetAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.String",
                    "typeSimple": "string"
                  }
                },
                {
                  "name": "GetTimezonesAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                    "typeSimple": "[Volo.Abp.NameValue]"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "timezone",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Void",
                    "typeSimple": "System.Void"
                  }
                }
              ]
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/timezone",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            },
            "GetTimezonesAsync": {
              "uniqueName": "GetTimezonesAsync",
              "name": "GetTimezonesAsync",
              "httpMethod": "GET",
              "url": "api/setting-management/timezone/timezones",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Volo.Abp.NameValue>",
                "typeSimple": "[Volo.Abp.NameValue]"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            },
            "UpdateAsyncByTimezone": {
              "uniqueName": "UpdateAsyncByTimezone",
              "name": "UpdateAsync",
              "httpMethod": "POST",
              "url": "api/setting-management/timezone",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "timezone",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "timezone",
                  "name": "timezone",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              },
              "allowAnonymous": null,
              "implementFrom": "Volo.Abp.SettingManagement.ITimeZoneSettingsAppService"
            }
          }
        }
      }
    }
  },
  "types": {
    "AgencyRatings.AgencyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AgencyId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Agency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAgency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Introduction",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AIntroduction",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsCredit",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "AgencyRatings.AgencyRatingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Agencies",
          "jsonName": null,
          "type": "[AgencyRatings.AgencyDto]",
          "typeSimple": "[AgencyRatings.AgencyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ratings",
          "jsonName": null,
          "type": "[AgencyRatings.RatingDto]",
          "typeSimple": "[AgencyRatings.RatingDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "AgencyRatings.RatingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RatingId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Rating",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARating",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Brief",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABrief",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsCredit",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.AnnouncementTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AnnouncementTypeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnouncementType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.AssetsAllocationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AssetsAllocationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AssetsAllocation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAssetsAllocation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.BenchmarkDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BenchmarkID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Benchmark",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABenchmark",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CapSizeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CapSizeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CapSize",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CompaniesTickerDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATicker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Company",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CompanyQNPDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Companies",
          "jsonName": null,
          "type": "[Companies.CompanyDto]",
          "typeSimple": "[Companies.CompanyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PeriodTypes",
          "jsonName": null,
          "type": "[Commons.PeriodTypeDto]",
          "typeSimple": "[Commons.PeriodTypeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriods",
          "jsonName": null,
          "type": "[Commons.QPeriodDto]",
          "typeSimple": "[Commons.QPeriodDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CompanyWithHasFundDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Companies",
          "jsonName": null,
          "type": "[Companies.CompanyDto]",
          "typeSimple": "[Companies.CompanyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AssetsAllocations",
          "jsonName": null,
          "type": "[Commons.AssetsAllocationDto]",
          "typeSimple": "[Commons.AssetsAllocationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeoDiversifications",
          "jsonName": null,
          "type": "[Commons.GeoDiversificationDto]",
          "typeSimple": "[Commons.GeoDiversificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorDiversifications",
          "jsonName": null,
          "type": "[Commons.SectorDiversificationDto]",
          "typeSimple": "[Commons.SectorDiversificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MajorInvestments",
          "jsonName": null,
          "type": "[Commons.MajorInvestmentDto]",
          "typeSimple": "[Commons.MajorInvestmentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Benchmarks",
          "jsonName": null,
          "type": "[Commons.BenchmarkDto]",
          "typeSimple": "[Commons.BenchmarkDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currencies",
          "jsonName": null,
          "type": "[Commons.CurrencyDto]",
          "typeSimple": "[Commons.CurrencyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PortfolioTypes",
          "jsonName": null,
          "type": "[Commons.PortfolioTypeDto]",
          "typeSimple": "[Commons.PortfolioTypeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFListings",
          "jsonName": null,
          "type": "[Commons.MFListingDto]",
          "typeSimple": "[Commons.MFListingDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFRisks",
          "jsonName": null,
          "type": "[Commons.MFRiskDto]",
          "typeSimple": "[Commons.MFRiskDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFClassifications",
          "jsonName": null,
          "type": "[Commons.MFClassificationDto]",
          "typeSimple": "[Commons.MFClassificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFCategories",
          "jsonName": null,
          "type": "[Commons.MFCategoryDto]",
          "typeSimple": "[Commons.MFCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFSubCategories",
          "jsonName": null,
          "type": "[Commons.MFSubCategoryDto]",
          "typeSimple": "[Commons.MFSubCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CompDropdownDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MarketSectors",
          "jsonName": null,
          "type": "[Commons.MarketSectorDto]",
          "typeSimple": "[Commons.MarketSectorDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InternalCategories",
          "jsonName": null,
          "type": "[Commons.InternalCategoryDto]",
          "typeSimple": "[Commons.InternalCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBIndustrialGroups",
          "jsonName": null,
          "type": "[Commons.GBIndustrialGroupDto]",
          "typeSimple": "[Commons.GBIndustrialGroupDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sectors",
          "jsonName": null,
          "type": "[Commons.SectorDto]",
          "typeSimple": "[Commons.SectorDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CapSizes",
          "jsonName": null,
          "type": "[Commons.CapSizeDto]",
          "typeSimple": "[Commons.CapSizeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currencies",
          "jsonName": null,
          "type": "[Commons.CurrencyDto]",
          "typeSimple": "[Commons.CurrencyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Industries",
          "jsonName": null,
          "type": "[Commons.IndustryDto]",
          "typeSimple": "[Commons.IndustryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubCurrencies",
          "jsonName": null,
          "type": "[Commons.SubCurrencyDto]",
          "typeSimple": "[Commons.SubCurrencyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CompStockMarketDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryGroup",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Abbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CountryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GCCID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACountry",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.CurrencyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACurrency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.ESDFactDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ESDFactID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ESDFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AESDFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.FactsOwnershipMappingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBOwnershipID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBOwnership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGBOwnership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.GBIndustrialGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBIndustrialGroupID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBSectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBIndustrialGroup",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.GeoDiversificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GeoDiversificationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeoDiversification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGeoDiversification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.GetNewsCatAndCountriesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NewsCategories",
          "jsonName": null,
          "type": "[Commons.NewsCategoryDto]",
          "typeSimple": "[Commons.NewsCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Countries",
          "jsonName": null,
          "type": "[Commons.CountryDto]",
          "typeSimple": "[Commons.CountryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.IndustryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IndustryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Industry",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.InternalCategoryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "InternalCategoryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InternalCategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.LangAnnounceTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LanguageTypes",
          "jsonName": null,
          "type": "[Commons.LanguageTypeDto]",
          "typeSimple": "[Commons.LanguageTypeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnouncementTypes",
          "jsonName": null,
          "type": "[Commons.AnnouncementTypeDto]",
          "typeSimple": "[Commons.AnnouncementTypeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.LanguageTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LanguageTypeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LanguageType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MajorInvestmentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MajorInvestmentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MajorInvestment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AMajorInvestment",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MarketLangAnnouncementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Abbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MarketSectorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MarketSectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MFCategoryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CategoryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Category",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MFClassificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ClassificationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Classification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AClassification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MFListingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ListingID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Listing",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AListing",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MFRiskDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RiskID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Risk",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARisk",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.MFSubCategoryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SubCategoryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubCategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASubCategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.NewsCategoryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NewsCategoryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewsCategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ANewsCategory",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.PeriodTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PeriodTypeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.PortfolioTypeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PortfolioTypeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PortfolioType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APortfolioType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.ProductServiceRawDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProductServiceRawID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.QPeriodDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "QPeriodID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.SectorDiversificationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SectorDiversificationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorDiversification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASectorDiversification",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.SectorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.StockMarketDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AStockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Abbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAbbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Commons.SubCurrencyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SubCurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubCurrency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Companies.CompanyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Company",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATicker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CapSizeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBSectorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBIndustrialGroupsID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBIndustryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InternalCategoryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Overview",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AOverview",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BusinessActivity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABusinessActivity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ownership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AOwnership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Branches",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABranches",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "YearEnd",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MainCompany",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasFunds",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ActiveIndices",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialCurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingMainCurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingSubCurrencyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Logo",
          "jsonName": null,
          "type": "[System.Byte]",
          "typeSimple": "[number]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EstablishmentDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OrderID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AlternativeTicker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockTicker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnglishShortName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyAccounts.CompanyGBFactMappingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomFactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACustomFactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyFactOrders.CompanyFactOrderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyFactOrdrID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFactIDOrder",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomOrder",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CheckMe",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsQuarterly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IRy",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IRq",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.AuditorDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AuditorID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Auditor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAuditor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Since",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Till",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.BoardMemberDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BoardMemberID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoardMember",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABoardMember",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Since",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Till",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomOrder",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.BranchDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BranchID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BranchName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABranchName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AStreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "POBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APOBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PinCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATelex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Cell",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Fax",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OpeningDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Region",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARegion",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.CompanyFinancialOverviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OverviewID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ListedDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Employees",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InitialCapital",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AuthorizedCapital",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubscribedCapital",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PaidupCapital",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OutstandingShares",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParValuePerShare",
          "jsonName": null,
          "type": "System.Single?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TreasuryStocks",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Beta",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.CompanyManagementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Managements",
          "jsonName": null,
          "type": "[CompanyManagements.ManagementDto]",
          "typeSimple": "[CompanyManagements.ManagementDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SeniorManagements",
          "jsonName": null,
          "type": "[CompanyManagements.SeniorManagementDto]",
          "typeSimple": "[CompanyManagements.SeniorManagementDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BoardMembers",
          "jsonName": null,
          "type": "[CompanyManagements.BoardMemberDto]",
          "typeSimple": "[CompanyManagements.BoardMemberDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Auditors",
          "jsonName": null,
          "type": "[CompanyManagements.AuditorDto]",
          "typeSimple": "[CompanyManagements.AuditorDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Branches",
          "jsonName": null,
          "type": "[CompanyManagements.BranchDto]",
          "typeSimple": "[CompanyManagements.BranchDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyFinancialOverviews",
          "jsonName": null,
          "type": "[CompanyManagements.CompanyFinancialOverviewDto]",
          "typeSimple": "[CompanyManagements.CompanyFinancialOverviewDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ContactInformations",
          "jsonName": null,
          "type": "[CompanyManagements.ContactInformationDto]",
          "typeSimple": "[CompanyManagements.ContactInformationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyProjects",
          "jsonName": null,
          "type": "[CompanyManagements.CompanyProjectDto]",
          "typeSimple": "[CompanyManagements.CompanyProjectDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProjectStatuses",
          "jsonName": null,
          "type": "[CompanyManagements.ProjectStatusDto]",
          "typeSimple": "[CompanyManagements.ProjectStatusDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.CompanyProjectDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProjectID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProjectStatusID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StartDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EndDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProjectStatus",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Active",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.ContactInformationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ContactInfoID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BranchName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ABranchName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AStreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "POBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APOBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PinCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATelex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Cell",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Fax",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.ManagementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ManagementID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Chairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AChairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HonoraryChairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AHonoraryChairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ViceChairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AViceChairman",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "President",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APresident",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HonoraryPresident",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AHonoraryPresident",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "VicePresident",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AVicePresident",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManagingDirector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AManagingDirector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeputyManagingDirector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADeputyManagingDirector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeneralManager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGeneralManager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CEO",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACEO",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Since",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Till",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.ProjectStatusDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProjectStatusID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProjectStatus",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AProjectStatus",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyManagements.SeniorManagementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SeniorManagementID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SeniorManagement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASeniorManagement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Since",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Till",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseUpdateDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.CompanyMutualFundDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AShortName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Manager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AManager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrencyID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CategoryID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubCategoryID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClassificationID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ListingID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManagementFee",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManagementFeeType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AManagementFeeType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FeeDescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFeeDescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateOfInception",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PriceAtInception",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinimumInitialSubscription",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AdditionalSubscription",
          "jsonName": null,
          "type": "System.Int64?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PortfolioTypeID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InvestmentManager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AInvestmentManager",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Administrator",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAdministrator",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Auditor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAuditor",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Custodian",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACustodian",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ManagementTeam",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AManagementTeam",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubscriptionDeadLine",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASubscriptionDeadLine",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RedemptionDeadLine",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARedemptionDeadLine",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValuationDate",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AValuationDate",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnounceOn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAnnounceOn",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RiskID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundAssets",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundBenchMark",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFundBenchMark",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundObjective",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFundObjective",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "InvestmentPolicy",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AInvestmentPolicy",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RiskProfile",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARiskProfile",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundsBenefits",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFundsBenefits",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundsComponents",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFundsComponents",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FundManagerComments",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AFundManagerComments",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UnitPriceCalculation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AUnitPriceCalculation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BenchmarkID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AStreetAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "POBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APOBox",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PinCode",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATelex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Cell",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Fax",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SearchTags",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASearchTags",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PageDescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APageDescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.GetCompanyMutualFundsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyMutualFunds",
          "jsonName": null,
          "type": "[CompanyMutualFunds.CompanyMutualFundDto]",
          "typeSimple": "[CompanyMutualFunds.CompanyMutualFundDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundGeoDiversPercents",
          "jsonName": null,
          "type": "[CompanyMutualFunds.MFundGeoDiversPercentDto]",
          "typeSimple": "[CompanyMutualFunds.MFundGeoDiversPercentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundAssestAllocsPercents",
          "jsonName": null,
          "type": "[CompanyMutualFunds.MFundAssestAllocsPercentDto]",
          "typeSimple": "[CompanyMutualFunds.MFundAssestAllocsPercentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundMajorInvestPercents",
          "jsonName": null,
          "type": "[CompanyMutualFunds.MFundMajorInvestPercentDto]",
          "typeSimple": "[CompanyMutualFunds.MFundMajorInvestPercentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundSectorDiversPercents",
          "jsonName": null,
          "type": "[CompanyMutualFunds.MFundSectorDiversPercentDto]",
          "typeSimple": "[CompanyMutualFunds.MFundSectorDiversPercentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.MFundAssestAllocsPercentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundAssestAllocsPercentID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AssetsAllocationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.MFundGeoDiversPercentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundGeoDiversPercentID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeoDiversificationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.MFundMajorInvestPercentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundMajorInvestPercentID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MajorInvestmentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFunds.MFundSectorDiversPercentDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundSectorDiversPercentID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorDiversificationID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyMutualFundSettings.CompanyMutualFundSettingDropdownDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AssetsAllocations",
          "jsonName": null,
          "type": "[Commons.AssetsAllocationDto]",
          "typeSimple": "[Commons.AssetsAllocationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Benchmarks",
          "jsonName": null,
          "type": "[Commons.BenchmarkDto]",
          "typeSimple": "[Commons.BenchmarkDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFCategories",
          "jsonName": null,
          "type": "[Commons.MFCategoryDto]",
          "typeSimple": "[Commons.MFCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFClassifications",
          "jsonName": null,
          "type": "[Commons.MFClassificationDto]",
          "typeSimple": "[Commons.MFClassificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GeoDiversifications",
          "jsonName": null,
          "type": "[Commons.GeoDiversificationDto]",
          "typeSimple": "[Commons.GeoDiversificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFListings",
          "jsonName": null,
          "type": "[Commons.MFListingDto]",
          "typeSimple": "[Commons.MFListingDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MajorInvestments",
          "jsonName": null,
          "type": "[Commons.MajorInvestmentDto]",
          "typeSimple": "[Commons.MajorInvestmentDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PortfolioTypes",
          "jsonName": null,
          "type": "[Commons.PortfolioTypeDto]",
          "typeSimple": "[Commons.PortfolioTypeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFRisks",
          "jsonName": null,
          "type": "[Commons.MFRiskDto]",
          "typeSimple": "[Commons.MFRiskDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorDiversifications",
          "jsonName": null,
          "type": "[Commons.SectorDiversificationDto]",
          "typeSimple": "[Commons.SectorDiversificationDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFSubCategories",
          "jsonName": null,
          "type": "[Commons.MFSubCategoryDto]",
          "typeSimple": "[Commons.MFSubCategoryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnershipFacts.CompanyOwnershipFactDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBOwnershipID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Facts",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "aFacts",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Figures",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnershipFacts.CompanyOwnershipFactEditDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBOwnershipID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Facts",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.CompanyFIPDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FIPID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PermittedSharesToForeigners",
          "jsonName": null,
          "type": "System.Single?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PermittedSharesToGCCNationals",
          "jsonName": null,
          "type": "System.Single?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PermittedSharesToArabNationals",
          "jsonName": null,
          "type": "System.Single?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PermittedDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.CompanyOwnershipDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Subsidiaries",
          "jsonName": null,
          "type": "[CompanyOwnerships.SubsidiaryDto]",
          "typeSimple": "[CompanyOwnerships.SubsidiaryDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubsCompUpds",
          "jsonName": null,
          "type": "[CompanyOwnerships.SubsCompUpdDto]",
          "typeSimple": "[CompanyOwnerships.SubsCompUpdDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SisterCompanies",
          "jsonName": null,
          "type": "[CompanyOwnerships.SisterCompanyDto]",
          "typeSimple": "[CompanyOwnerships.SisterCompanyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyProducts",
          "jsonName": null,
          "type": "[CompanyOwnerships.CompanyProductDto]",
          "typeSimple": "[CompanyOwnerships.CompanyProductDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyRawMaterials",
          "jsonName": null,
          "type": "[CompanyOwnerships.CompanyRawMaterialDto]",
          "typeSimple": "[CompanyOwnerships.CompanyRawMaterialDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyFIPs",
          "jsonName": null,
          "type": "[CompanyOwnerships.CompanyFIPDto]",
          "typeSimple": "[CompanyOwnerships.CompanyFIPDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MiscNotes",
          "jsonName": null,
          "type": "[CompanyOwnerships.MiscNotesDto]",
          "typeSimple": "[CompanyOwnerships.MiscNotesDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.CompanyProductDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyProductID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyProduct",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACompanyProduct",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LaunchDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastProduct",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ALastProduct",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.CompanyRawMaterialDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RawMaterialID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RawMaterial",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARawMaterial",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentProvider",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACurrentProvider",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastProvider",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ALastProvider",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Reason",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AReason",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.MiscNotesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MiscNotesID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Note",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ANote",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.SisterCompanyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SisterCompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SisterCompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASisterCompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Relation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARelation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.SubsCompUpdDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SubsCompUpdID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Remarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UploadDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyOwnerships.SubsidiaryDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SubsidiaryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACountry",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubsidiaryCompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASubsidiaryCompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Share",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PrincipalActivity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APrincipalActivity",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomOrder",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyTypeID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyPSRaws.CompanyPSRawOutputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProductServiceRawID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PSRCompanyServices",
          "jsonName": null,
          "type": "[CompanyPSRaws.PSRCompanyServiceDto]",
          "typeSimple": "[CompanyPSRaws.PSRCompanyServiceDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PSRCompanyProducts",
          "jsonName": null,
          "type": "[CompanyPSRaws.PSRCompanyProductDto]",
          "typeSimple": "[CompanyPSRaws.PSRCompanyProductDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PSRCompanyRawMaterials",
          "jsonName": null,
          "type": "[CompanyPSRaws.PSRCompanyRawMaterialDto]",
          "typeSimple": "[CompanyPSRaws.PSRCompanyRawMaterialDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyPSRaws.PSRCompanyProductDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompProductID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProductServiceRawID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CapacityPerAnnum",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProductionStart",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyPSRaws.PSRCompanyRawMaterialDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompRawID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProductServiceRawID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UsePerAnnum",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ASuppliers",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Suppliers",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CompanyPSRaws.PSRCompanyServiceDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompServiceID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProductServiceRawID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ServiceRange",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ServiceStart",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ADescription",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CorporateAnnouncements.CorporateAnnouncementDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CorporateAnnouncementID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnouncementTypeID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnouncedDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AnnouncedDateTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Announcement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAnnouncement",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreationDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CountryAccounts.CountryAccountDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CountryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ESDFactID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryCustomFactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACountryCustomFactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "CountryFactOrders.CountryFactOrderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CountryFactOrdrID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ESDFactIDOrder",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FactName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomOrder",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MeasurementUnit",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Currency",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.AsOfDateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AsOfDate",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasChanges",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.AsofDatesFinancialDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsDetails",
          "jsonName": null,
          "type": "[Entry.FinancialsDetailDto]",
          "typeSimple": "[Entry.FinancialsDetailDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinEntryInReviews",
          "jsonName": null,
          "type": "[Entry.FinEntryInReviewDto]",
          "typeSimple": "[Entry.FinEntryInReviewDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.AsofDatesFinancialInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsNew",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.CompanyAccountsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsDetails",
          "jsonName": null,
          "type": "[Entry.FinancialsDetailDto]",
          "typeSimple": "[Entry.FinancialsDetailDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsOfDates",
          "jsonName": null,
          "type": "[Entry.AsOfDateDto]",
          "typeSimple": "[Entry.AsOfDateDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinValueMatches",
          "jsonName": null,
          "type": "[Entry.FinValueMatchDto]",
          "typeSimple": "[Entry.FinValueMatchDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReentryMatches",
          "jsonName": null,
          "type": "[Entry.ReentryMatchDto]",
          "typeSimple": "[Entry.ReentryMatchDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.CompanyAccountsInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewReviewFinancialID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsNew",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.FinancialsDetailDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialDetailId",
          "jsonName": null,
          "type": "System.Int64?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsTitle",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CustomOrder",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CheckMe",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.FinEntryInReviewDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinEntryInReviewID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialDetailID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReviewEntryDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.FinValueMatchDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinValueMatchID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewReviewFinancialID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialDetailID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.ReentryMatchDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ReentryMatchID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialDetailID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsMatched",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Entry.StatusFinancialsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsOfDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewReviewFinancialID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UploadedPath",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SecondaryUploadedPath",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FileName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Remarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UploadedBy",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UploadedDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Company",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialEntryTypeID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "EstimatesandForecasts.EstimatesandForecastDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EFID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Year",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsofDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReportDate",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReportSourceID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Remarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Revenue",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NetProfit",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalAssets",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TotalLiabilities",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OwnersEquity",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FairValue",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EPS",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PE",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PB",
          "jsonName": null,
          "type": "System.Decimal?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Recommendation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARecommendation",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "EstimatesandForecasts.EstimatesandForecastOutputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EstimatesandForecasts",
          "jsonName": null,
          "type": "[EstimatesandForecasts.EstimatesandForecastDto]",
          "typeSimple": "[EstimatesandForecasts.EstimatesandForecastDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReportSources",
          "jsonName": null,
          "type": "[EstimatesandForecasts.ReportSourceDto]",
          "typeSimple": "[EstimatesandForecasts.ReportSourceDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "EstimatesandForecasts.ReportSourceDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ReportSourceID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Source",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.AccountsClassifications.ACFactsDtos": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AcFactId",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AcFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Parent",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAcFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.AccountsClassifications.GbAcFactsAccount": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AcFactID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AcFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AacFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsACAccount",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsTitle",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Books.BookDto": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PublishDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Books.CreateUpdateBookDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PublishDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Price",
          "jsonName": null,
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.EndOfDay.EODPrices": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PriceID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OpeningPrice",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HighestPrice",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LowestPrice",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClosingPrice",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingVolume",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingValue",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Trades",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastClosedPrice",
          "jsonName": null,
          "type": "System.Double",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastUpdated",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.EndOfDay.GCCSector": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Abbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryGroup",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AAbbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AStockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACountryGroup",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.GbFacts.GbFactsAccount": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 100,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGBFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGBAccount",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsTitle",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.GbOwnerShips.GbOwnerShip": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBOwnershipID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBOwnership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGBOwnership",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGBOwnership",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsTitle",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.LHRUploads.Company": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "parentID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "label",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Children",
          "jsonName": null,
          "type": "[GB.Opera.LHRUploads.Company]",
          "typeSimple": "[GB.Opera.LHRUploads.Company]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.LHRUploads.LHRUpload": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Abbr",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CountryGroup",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.GlobalIndices": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Market",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GlobalIndexID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Open",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "High",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Low",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Close",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Volume",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastUpdated",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.GulfbasePrices": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GulfbaseIndexID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IndexValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastUpdated",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PreviousValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Volume",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ISCapSize",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.MFundCompanies": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Company",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ACompany",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ATicker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarketID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SectorID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.MFundPrices": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundPriceID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PriceDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ClosingPrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingVolume",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastClosePrice",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastUpdated",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.MFunds": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MFundID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AShortName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.OfficialsIndics.OfficialIndics": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OfficialIndexID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "StockMarket",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Sector",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Opening",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Closing",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Highest",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Lowest",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Volume",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Transactions",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TradingValue",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastUpdated",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PreviousClose",
          "jsonName": null,
          "type": "System.Decimal",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.FinancialEntryTypes": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialEntryTypeID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialEntryType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.Periods": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PeriodTypeID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.QPeriodTypes": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "QPeriodID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.Upload": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsOfDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Year",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsYearly",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EntryUser",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReEntryUser",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriodID",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.UploadFinancialListDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Ticker",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsOfDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Year",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsYearly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EntryUser",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReEntryUser",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriodID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.UploadFinancials": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FinancialsID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewReviewFinancialID",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AsOfDate",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PeriodTypeID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialEntryTypeID",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Remarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ARemarks",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Year",
          "jsonName": null,
          "type": "System.Int16?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriodId",
          "jsonName": null,
          "type": "System.Int16",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsYearly",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PeriodNote",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "APeriodNote",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserID",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EntryUser",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReEntryUser",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.UploadwithHasDtos": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Uploads",
          "jsonName": null,
          "type": "[GB.Opera.Uploads.Upload]",
          "typeSimple": "[GB.Opera.Uploads.Upload]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FinancialEntryType",
          "jsonName": null,
          "type": "[GB.Opera.Uploads.FinancialEntryTypes]",
          "typeSimple": "[GB.Opera.Uploads.FinancialEntryTypes]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Period",
          "jsonName": null,
          "type": "[GB.Opera.Uploads.Periods]",
          "typeSimple": "[GB.Opera.Uploads.Periods]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "QPeriodType",
          "jsonName": null,
          "type": "[GB.Opera.Uploads.QPeriodTypes]",
          "typeSimple": "[GB.Opera.Uploads.QPeriodTypes]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Companies",
          "jsonName": null,
          "type": "[Companies.CompanyDto]",
          "typeSimple": "[Companies.CompanyDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GB.Opera.Uploads.Users": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserID",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "GbFacts.GbFactListDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GBFactID",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GBFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentId",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AGBFact",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "News.NewsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NewsID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GCCID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewsCategoryID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CompanyID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Date",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Title",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SubTitle",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Source",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsHome",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "gulfBaseSectorID",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Islamic",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ForSocialNetworks",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGulfbaseNews",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LangID",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ChangePasswordInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrentPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NewPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsExternal",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HasPassword",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResetToken",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AppName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrl",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnUrlHash",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 16,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.VerifyPasswordResetTokenInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResetToken",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Result",
          "jsonName": null,
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserNameOrEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 255,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 32,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RememberMe",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "0",
          "maximum": "2147483647",
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "GrantedPolicies",
          "jsonName": null,
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Auth",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Setting",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentUser",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GlobalFeatures",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MultiTenancy",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentTenant",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Timing",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Clock",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ObjectExtensions",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationRequestOptions": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeLocalizationResources",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EnabledFeatures",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Resources",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Languages",
          "jsonName": null,
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CurrentCulture",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultResourceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LanguagesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LanguageFilesMap",
          "jsonName": null,
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Resources",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnlyDynamics",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Texts",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BaseResources",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "jsonName": null,
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnglishName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRightToLeft",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NativeName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateTimeFormat",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorUserId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorTenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImpersonatorTenantName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SurName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberVerified",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Roles",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateTimeFormatLong",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortDatePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FullDateTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DateSeparator",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ShortTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LongTimePattern",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LocalizationResource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnCreate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnUpdate",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Config",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Api",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Ui",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Attributes",
          "jsonName": null,
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnCreateForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "OnEditForm",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Lookup",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ResultListPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayPropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValuePropertyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FilterParamName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Resource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Configuration",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Enums",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Windows",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "jsonName": null,
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsAvailable",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "NormalizedName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Provider",
          "jsonName": null,
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ValueType",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Depth",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Key",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "jsonName": null,
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "HttpMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Url",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SupportedVersions",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParametersOnMethod",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Parameters",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnValue",
          "jsonName": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllowAnonymous",
          "jsonName": null,
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ImplementFrom",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Types",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ControllerGroupName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRemoteService",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsIntegrationService",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ApiVersion",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Interfaces",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Actions",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Methods",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParametersOnMethod",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ReturnValue",
          "jsonName": null,
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeAsString",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RemoteServiceName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Controllers",
          "jsonName": null,
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsOptional",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultValue",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConstraintTypes",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "BindingSourceId",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DescriptorName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "JsonName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsRequired",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MinLength",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "MaxLength",
          "jsonName": null,
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Minimum",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Maximum",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Regex",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TypeSimple",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsEnum",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnumNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EnumValues",
          "jsonName": null,
          "type": "[System.Object]",
          "typeSimple": "[object]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GenericArguments",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityRolesInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsDefault",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsStatic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsPublic",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 16,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AccessFailedCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LockoutEnd",
          "jsonName": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EntityVersion",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "LastPasswordChangeTime",
          "jsonName": null,
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": 0,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RoleNames",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UiCultureName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TwoLetterISOLanguageName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "FlagIcon",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Value",
          "jsonName": null,
          "type": "T",
          "typeSimple": "T",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EntityDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Groups",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ParentName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AllowedProviders",
          "jsonName": null,
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "GrantedProviders",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayNameKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DisplayNameResource",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ProviderKey",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsGranted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Permissions",
          "jsonName": null,
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.EmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.SendTestEmailInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SenderEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TargetEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Subject",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Body",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.SettingManagement.UpdateEmailSettingsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SmtpHost",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPort",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": "1",
          "maximum": "65535",
          "regex": null
        },
        {
          "name": "SmtpUserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpDomain",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpEnableSsl",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "SmtpUseDefaultCredentials",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "DefaultFromDisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 1024,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AdminEmailAddress",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 256,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "AdminPassword",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": null,
          "maxLength": 128,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true,
          "minLength": 0,
          "maxLength": 64,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "IsActive",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "ExtraProperties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Validator",
          "jsonName": null,
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Item",
          "jsonName": null,
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        },
        {
          "name": "Properties",
          "jsonName": null,
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false,
          "minLength": null,
          "maxLength": null,
          "minimum": null,
          "maximum": null,
          "regex": null
        }
      ]
    }
  }
}